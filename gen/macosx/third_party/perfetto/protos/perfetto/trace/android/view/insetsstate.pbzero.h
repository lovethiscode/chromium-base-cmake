// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_VIEW_INSETSSTATE_PROTO_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_VIEW_INSETSSTATE_PROTO_H_

#include <stddef.h>
#include <stdint.h>

#include "perfetto/protozero/field_writer.h"
#include "perfetto/protozero/message.h"
#include "perfetto/protozero/packed_repeated_fields.h"
#include "perfetto/protozero/proto_decoder.h"
#include "perfetto/protozero/proto_utils.h"

namespace perfetto {
namespace protos {
namespace pbzero {
class DisplayCutoutProto;
class InsetsSourceProto;
class RectProto;
} // Namespace pbzero.
} // Namespace protos.
} // Namespace perfetto.

namespace perfetto {
namespace protos {
namespace pbzero {

class InsetsStateProto_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/3, /*HAS_NONPACKED_REPEATED_FIELDS=*/true> {
 public:
  InsetsStateProto_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit InsetsStateProto_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit InsetsStateProto_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_sources() const { return at<1>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstBytes> sources() const { return GetRepeated<::protozero::ConstBytes>(1); }
  bool has_display_frame() const { return at<2>().valid(); }
  ::protozero::ConstBytes display_frame() const { return at<2>().as_bytes(); }
  bool has_display_cutout() const { return at<3>().valid(); }
  ::protozero::ConstBytes display_cutout() const { return at<3>().as_bytes(); }
};

class InsetsStateProto : public ::protozero::Message {
 public:
  using Decoder = InsetsStateProto_Decoder;
  enum : int32_t {
    kSourcesFieldNumber = 1,
    kDisplayFrameFieldNumber = 2,
    kDisplayCutoutFieldNumber = 3,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.InsetsStateProto"; }


  using FieldMetadata_Sources =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      InsetsSourceProto,
      InsetsStateProto>;

  static constexpr FieldMetadata_Sources kSources{};
  template <typename T = InsetsSourceProto> T* add_sources() {
    return BeginNestedMessage<T>(1);
  }


  using FieldMetadata_DisplayFrame =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      RectProto,
      InsetsStateProto>;

  static constexpr FieldMetadata_DisplayFrame kDisplayFrame{};
  template <typename T = RectProto> T* set_display_frame() {
    return BeginNestedMessage<T>(2);
  }


  using FieldMetadata_DisplayCutout =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      DisplayCutoutProto,
      InsetsStateProto>;

  static constexpr FieldMetadata_DisplayCutout kDisplayCutout{};
  template <typename T = DisplayCutoutProto> T* set_display_cutout() {
    return BeginNestedMessage<T>(3);
  }

};

} // Namespace.
} // Namespace.
} // Namespace.
#endif  // Include guard.
