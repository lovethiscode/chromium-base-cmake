// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_VIEW_DISPLAY_PROTO_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_VIEW_DISPLAY_PROTO_H_

#include <stddef.h>
#include <stdint.h>

#include "perfetto/protozero/field_writer.h"
#include "perfetto/protozero/message.h"
#include "perfetto/protozero/packed_repeated_fields.h"
#include "perfetto/protozero/proto_decoder.h"
#include "perfetto/protozero/proto_utils.h"


namespace perfetto {
namespace protos {
namespace pbzero {

namespace perfetto_pbzero_enum_ViewDisplayProto {
enum ColorMode : int32_t {
  COLOR_MODE_INVALID = -1,
  COLOR_MODE_DEFAULT = 0,
  COLOR_MODE_BT601_625 = 1,
  COLOR_MODE_BT601_625_UNADJUSTED = 2,
  COLOR_MODE_BT601_525 = 3,
  COLOR_MODE_BT601_525_UNADJUSTED = 4,
  COLOR_MODE_BT709 = 5,
  COLOR_MODE_DCI_P3 = 6,
  COLOR_MODE_SRGB = 7,
  COLOR_MODE_ADOBE_RGB = 8,
  COLOR_MODE_DISPLAY_P3 = 9,
};
} // namespace perfetto_pbzero_enum_ViewDisplayProto
using ViewDisplayProto_ColorMode = perfetto_pbzero_enum_ViewDisplayProto::ColorMode;


constexpr ViewDisplayProto_ColorMode ViewDisplayProto_ColorMode_MIN = ViewDisplayProto_ColorMode::COLOR_MODE_INVALID;
constexpr ViewDisplayProto_ColorMode ViewDisplayProto_ColorMode_MAX = ViewDisplayProto_ColorMode::COLOR_MODE_DISPLAY_P3;


PERFETTO_PROTOZERO_CONSTEXPR14_OR_INLINE
const char* ViewDisplayProto_ColorMode_Name(::perfetto::protos::pbzero::ViewDisplayProto_ColorMode value) {
  switch (value) {
  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_INVALID:
    return "COLOR_MODE_INVALID";

  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_DEFAULT:
    return "COLOR_MODE_DEFAULT";

  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_BT601_625:
    return "COLOR_MODE_BT601_625";

  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_BT601_625_UNADJUSTED:
    return "COLOR_MODE_BT601_625_UNADJUSTED";

  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_BT601_525:
    return "COLOR_MODE_BT601_525";

  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_BT601_525_UNADJUSTED:
    return "COLOR_MODE_BT601_525_UNADJUSTED";

  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_BT709:
    return "COLOR_MODE_BT709";

  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_DCI_P3:
    return "COLOR_MODE_DCI_P3";

  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_SRGB:
    return "COLOR_MODE_SRGB";

  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_ADOBE_RGB:
    return "COLOR_MODE_ADOBE_RGB";

  case ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode::COLOR_MODE_DISPLAY_P3:
    return "COLOR_MODE_DISPLAY_P3";
  }
  return "PBZERO_UNKNOWN_ENUM_VALUE";
}

class ViewDisplayProto_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/0, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  ViewDisplayProto_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit ViewDisplayProto_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit ViewDisplayProto_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
};

class ViewDisplayProto : public ::protozero::Message {
 public:
  using Decoder = ViewDisplayProto_Decoder;
  static constexpr const char* GetName() { return ".perfetto.protos.ViewDisplayProto"; }


  using ColorMode = ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode;
  static inline const char* ColorMode_Name(ColorMode value) {
    return ::perfetto::protos::pbzero::ViewDisplayProto_ColorMode_Name(value);
  }
  static inline const ColorMode COLOR_MODE_INVALID = ColorMode::COLOR_MODE_INVALID;
  static inline const ColorMode COLOR_MODE_DEFAULT = ColorMode::COLOR_MODE_DEFAULT;
  static inline const ColorMode COLOR_MODE_BT601_625 = ColorMode::COLOR_MODE_BT601_625;
  static inline const ColorMode COLOR_MODE_BT601_625_UNADJUSTED = ColorMode::COLOR_MODE_BT601_625_UNADJUSTED;
  static inline const ColorMode COLOR_MODE_BT601_525 = ColorMode::COLOR_MODE_BT601_525;
  static inline const ColorMode COLOR_MODE_BT601_525_UNADJUSTED = ColorMode::COLOR_MODE_BT601_525_UNADJUSTED;
  static inline const ColorMode COLOR_MODE_BT709 = ColorMode::COLOR_MODE_BT709;
  static inline const ColorMode COLOR_MODE_DCI_P3 = ColorMode::COLOR_MODE_DCI_P3;
  static inline const ColorMode COLOR_MODE_SRGB = ColorMode::COLOR_MODE_SRGB;
  static inline const ColorMode COLOR_MODE_ADOBE_RGB = ColorMode::COLOR_MODE_ADOBE_RGB;
  static inline const ColorMode COLOR_MODE_DISPLAY_P3 = ColorMode::COLOR_MODE_DISPLAY_P3;
};

} // Namespace.
} // Namespace.
} // Namespace.
#endif  // Include guard.
