// DO NOT EDIT. Autogenerated by Perfetto cppgen_plugin
#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_TRACE_PACKET_PROTO_CPP_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_TRACE_PACKET_PROTO_CPP_H_

#include <stdint.h>
#include <bitset>
#include <vector>
#include <string>
#include <type_traits>

#include "perfetto/protozero/cpp_message_obj.h"
#include "perfetto/protozero/copyable_ptr.h"
#include "perfetto/base/export.h"

namespace perfetto {
namespace protos {
namespace gen {
class TracePacket;
class TracePacketDefaults;
class V8CodeDefaults;
class PerfSampleDefaults;
class PerfEvents_Timebase;
class PerfEvents_RawEvent;
class PerfEvents_Tracepoint;
class TrackEventDefaults;
class InternedData;
class InternedString;
class InternedV8Isolate;
class InternedV8Isolate_CodeRange;
class InternedV8WasmScript;
class InternedV8JsScript;
class V8String;
class InternedV8JsFunction;
class InternedV8String;
class NetworkPacketContext;
class NetworkPacketEvent;
class InternedGpuRenderStageSpecification;
class InternedGraphicsContext;
class Callstack;
class Frame;
class Mapping;
class ProfiledFrameSymbols;
class HistogramName;
class LogMessageBody;
class UnsymbolizedSourceLocation;
class SourceLocation;
class DebugAnnotationValueTypeName;
class DebugAnnotationName;
class EventName;
class EventCategory;
class TestEvent;
class TestEvent_TestPayload;
class DebugAnnotation;
class DebugAnnotation_NestedValue;
class PixelModemTokenDatabase;
class PixelModemEvents;
class RemoteClockSync;
class RemoteClockSync_SyncedClocks;
class ClockSnapshot;
class ClockSnapshot_Clock;
class V8CodeMove;
class V8RegExpCode;
class V8WasmCode;
class V8InternalCode;
class V8JsCode;
class EtwTraceEventBundle;
class EtwTraceEvent;
class ReadyThreadEtwEvent;
class CSwitchEtwEvent;
class WinscopeExtensions;
class ProtoLogViewerConfig;
class ProtoLogViewerConfig_Group;
class ProtoLogViewerConfig_MessageData;
class ProtoLogMessage;
class ShellHandlerMappings;
class ShellHandlerMapping;
class ShellTransition;
class ShellTransition_Target;
class TransactionTraceEntry;
class DisplayInfo;
class Transform;
class DisplayState;
class RectProto;
class LayerCreationArgs;
class TransactionState;
class LayerState;
class LayerState_WindowInfo;
class RegionProto;
class BlurRegion;
class ColorTransformProto;
class LayerState_BufferData;
class LayerState_Color3;
class LayerState_Matrix22;
class LayersSnapshotProto;
class DisplayProto;
class TransformProto;
class SizeProto;
class LayersProto;
class LayerProto;
class FloatRectProto;
class InputWindowInfoProto;
class LayerProto_MetadataEntry;
class BarrierLayerProto;
class ActiveBufferProto;
class ColorProto;
class PositionProto;
class TrackEventRangeOfInterest;
class NetworkPacketBundle;
class ExtensionDescriptor;
class FileDescriptorSet;
class FileDescriptorProto;
class FieldDescriptorProto;
class FieldOptions;
class UninterpretedOption;
class UninterpretedOption_NamePart;
class EnumDescriptorProto;
class EnumValueDescriptorProto;
class DescriptorProto;
class DescriptorProto_ReservedRange;
class OneofDescriptorProto;
class OneofOptions;
class FtraceEventBundle;
class FtraceEventBundle_FtraceError;
class FtraceEventBundle_CompactSched;
class FtraceEvent;
class BclIrqTriggerFtraceEvent;
class MaliMaliPMMCURESETWAITFtraceEvent;
class MaliMaliPMMCUPOWERDOWNFtraceEvent;
class MaliMaliPMMCUPENDONRELOADFtraceEvent;
class MaliMaliPMMCUPENDOFFFtraceEvent;
class MaliMaliPMMCUONSLEEPINITIATEFtraceEvent;
class MaliMaliPMMCUONPENDSLEEPFtraceEvent;
class MaliMaliPMMCUONPENDHALTFtraceEvent;
class MaliMaliPMMCUONHWCNTENABLEFtraceEvent;
class MaliMaliPMMCUONHWCNTDISABLEFtraceEvent;
class MaliMaliPMMCUONHALTFtraceEvent;
class MaliMaliPMMCUONGLBREINITPENDFtraceEvent;
class MaliMaliPMMCUONCOREATTRUPDATEPENDFtraceEvent;
class MaliMaliPMMCUONFtraceEvent;
class MaliMaliPMMCUOFFFtraceEvent;
class MaliMaliPMMCUINSLEEPFtraceEvent;
class MaliMaliPMMCUHCTLSHADERSREADYOFFFtraceEvent;
class MaliMaliPMMCUHCTLSHADERSPENDONFtraceEvent;
class MaliMaliPMMCUHCTLSHADERSPENDOFFFtraceEvent;
class MaliMaliPMMCUHCTLSHADERSCOREOFFPENDFtraceEvent;
class MaliMaliPMMCUHCTLMCUONRECHECKFtraceEvent;
class MaliMaliPMMCUHCTLCOREINACTIVEPENDFtraceEvent;
class MaliMaliPMMCUHCTLCORESNOTIFYPENDFtraceEvent;
class MaliMaliPMMCUHCTLCORESDOWNSCALENOTIFYPENDFtraceEvent;
class KgslGpuFrequencyFtraceEvent;
class DcvshFreqFtraceEvent;
class ThermalExynosAcpmHighOverheadFtraceEvent;
class ThermalExynosAcpmBulkFtraceEvent;
class DevicePmCallbackEndFtraceEvent;
class DevicePmCallbackStartFtraceEvent;
class GoogleIrmEventFtraceEvent;
class GoogleIccEventFtraceEvent;
class FastrpcDmaMapFtraceEvent;
class FastrpcDmaUnmapFtraceEvent;
class FastrpcDmaAllocFtraceEvent;
class FastrpcDmaFreeFtraceEvent;
class F2fsGcEndFtraceEvent;
class F2fsGcBeginFtraceEvent;
class F2fsBackgroundGcFtraceEvent;
class DpuDsiTxFtraceEvent;
class DpuDsiRxFtraceEvent;
class DpuDsiCmdFifoStatusFtraceEvent;
class SchedMigrateTaskFtraceEvent;
class PanelWriteGenericFtraceEvent;
class RpmStatusFtraceEvent;
class GpuWorkPeriodFtraceEvent;
class SchedSwitchWithCtrsFtraceEvent;
class BinderReturnFtraceEvent;
class BinderCommandFtraceEvent;
class SamsungTracingMarkWriteFtraceEvent;
class MaliMaliCSFINTERRUPTENDFtraceEvent;
class MaliMaliCSFINTERRUPTSTARTFtraceEvent;
class SuspendResumeMinimalFtraceEvent;
class HostMemAbortFtraceEvent;
class HostSmcFtraceEvent;
class HostHcallFtraceEvent;
class HypExitFtraceEvent;
class HypEnterFtraceEvent;
class MaliMaliKCPUFENCEWAITENDFtraceEvent;
class MaliMaliKCPUFENCEWAITSTARTFtraceEvent;
class MaliMaliKCPUFENCESIGNALFtraceEvent;
class MaliMaliKCPUCQSWAITENDFtraceEvent;
class MaliMaliKCPUCQSWAITSTARTFtraceEvent;
class MaliMaliKCPUCQSSETFtraceEvent;
class VirtioGpuCmdResponseFtraceEvent;
class VirtioGpuCmdQueueFtraceEvent;
class LwisTracingMarkWriteFtraceEvent;
class CmaAllocInfoFtraceEvent;
class CmaAllocStartFtraceEvent;
class TrustyEnqueueNopFtraceEvent;
class TrustyIpcRxFtraceEvent;
class TrustyIpcReadEndFtraceEvent;
class TrustyIpcReadFtraceEvent;
class TrustyIpcPollFtraceEvent;
class TrustyIpcWriteFtraceEvent;
class TrustyIpcConnectEndFtraceEvent;
class TrustyIpcConnectFtraceEvent;
class TrustyIpcHandleEventFtraceEvent;
class TrustyIrqFtraceEvent;
class TrustyReclaimMemoryDoneFtraceEvent;
class TrustyReclaimMemoryFtraceEvent;
class TrustyShareMemoryDoneFtraceEvent;
class TrustyShareMemoryFtraceEvent;
class TrustyStdCall32DoneFtraceEvent;
class TrustyStdCall32FtraceEvent;
class TrustySmcDoneFtraceEvent;
class TrustySmcFtraceEvent;
class MmShrinkSlabEndFtraceEvent;
class MmShrinkSlabStartFtraceEvent;
class VirtioVideoResourceQueueDoneFtraceEvent;
class VirtioVideoResourceQueueFtraceEvent;
class VirtioVideoCmdDoneFtraceEvent;
class VirtioVideoCmdFtraceEvent;
class FuncgraphExitFtraceEvent;
class FuncgraphEntryFtraceEvent;
class AndroidFsFsyncStartFtraceEvent;
class AndroidFsFsyncEndFtraceEvent;
class AndroidFsDatawriteStartFtraceEvent;
class AndroidFsDatawriteEndFtraceEvent;
class AndroidFsDatareadStartFtraceEvent;
class AndroidFsDatareadEndFtraceEvent;
class DsiTxFtraceEvent;
class DsiRxFtraceEvent;
class DsiCmdFifoStatusFtraceEvent;
class Vb2V4l2DqbufFtraceEvent;
class Vb2V4l2QbufFtraceEvent;
class Vb2V4l2BufDoneFtraceEvent;
class Vb2V4l2BufQueueFtraceEvent;
class V4l2DqbufFtraceEvent;
class V4l2QbufFtraceEvent;
class SchedCpuUtilCfsFtraceEvent;
class F2fsIostatLatencyFtraceEvent;
class F2fsIostatFtraceEvent;
class DmaFenceWaitEndFtraceEvent;
class DmaFenceWaitStartFtraceEvent;
class DmaFenceSignaledFtraceEvent;
class DmaFenceEmitFtraceEvent;
class DmaFenceInitFtraceEvent;
class DrmSchedProcessJobFtraceEvent;
class DrmRunJobFtraceEvent;
class DrmSchedJobFtraceEvent;
class DrmVblankEventDeliveredFtraceEvent;
class DrmVblankEventFtraceEvent;
class ConsoleFtraceEvent;
class UfshcdClkGatingFtraceEvent;
class UfshcdCommandFtraceEvent;
class WakeupSourceDeactivateFtraceEvent;
class WakeupSourceActivateFtraceEvent;
class VgicUpdateIrqPendingFtraceEvent;
class TrapRegFtraceEvent;
class KvmWfxArm64FtraceEvent;
class KvmVcpuWakeupFtraceEvent;
class KvmUserspaceExitFtraceEvent;
class KvmUnmapHvaRangeFtraceEvent;
class KvmToggleCacheFtraceEvent;
class KvmTimerUpdateIrqFtraceEvent;
class KvmTimerSaveStateFtraceEvent;
class KvmTimerRestoreStateFtraceEvent;
class KvmTimerHrtimerExpireFtraceEvent;
class KvmTimerEmulateFtraceEvent;
class KvmTestAgeHvaFtraceEvent;
class KvmSysAccessFtraceEvent;
class KvmSetWayFlushFtraceEvent;
class KvmSetSpteHvaFtraceEvent;
class KvmSetIrqFtraceEvent;
class KvmSetGuestDebugFtraceEvent;
class KvmMmioEmulateFtraceEvent;
class KvmMmioFtraceEvent;
class KvmIrqLineFtraceEvent;
class KvmHvcArm64FtraceEvent;
class KvmHandleSysRegFtraceEvent;
class KvmGuestFaultFtraceEvent;
class KvmGetTimerMapFtraceEvent;
class KvmFpuFtraceEvent;
class KvmExitFtraceEvent;
class KvmEntryFtraceEvent;
class KvmArmSetupDebugFtraceEvent;
class KvmArmSetRegsetFtraceEvent;
class KvmArmSetDreg32FtraceEvent;
class KvmArmClearDebugFtraceEvent;
class KvmAgePageFtraceEvent;
class KvmAgeHvaFtraceEvent;
class KvmAckIrqFtraceEvent;
class KvmAccessFaultFtraceEvent;
class KfreeSkbFtraceEvent;
class NapiGroReceiveExitFtraceEvent;
class NapiGroReceiveEntryFtraceEvent;
class CrosEcSensorhubDataFtraceEvent;
class TcpRetransmitSkbFtraceEvent;
class InetSockSetStateFtraceEvent;
class NetDevXmitFtraceEvent;
class NetifReceiveSkbFtraceEvent;
class RssStatThrottledFtraceEvent;
class SdeSdePerfUpdateBusFtraceEvent;
class SdeSdePerfSetQosLutsFtraceEvent;
class SdeSdePerfCrtcUpdateFtraceEvent;
class SdeSdePerfCalcCrtcFtraceEvent;
class SdeSdeEvtlogFtraceEvent;
class SchedPiSetprioFtraceEvent;
class CpuhpPauseFtraceEvent;
class DmaHeapStatFtraceEvent;
class MaliTracingMarkWriteFtraceEvent;
class G2dTracingMarkWriteFtraceEvent;
class DpuTracingMarkWriteFtraceEvent;
class FastrpcDmaStatFtraceEvent;
class CpuhpLatencyFtraceEvent;
class CpuhpEnterFtraceEvent;
class CpuhpMultiEnterFtraceEvent;
class CpuhpExitFtraceEvent;
class CdevUpdateFtraceEvent;
class ThermalTemperatureFtraceEvent;
class GpuMemTotalFtraceEvent;
class ScmCallEndFtraceEvent;
class ScmCallStartFtraceEvent;
class IonBufferDestroyFtraceEvent;
class IonBufferCreateFtraceEvent;
class IonStatFtraceEvent;
class MarkVictimFtraceEvent;
class SdeTracingMarkWriteFtraceEvent;
class GpuFrequencyFtraceEvent;
class ZeroFtraceEvent;
class SysExitFtraceEvent;
class SysEnterFtraceEvent;
class MmEventRecordFtraceEvent;
class GenericFtraceEvent;
class GenericFtraceEvent_Field;
class OomScoreAdjUpdateFtraceEvent;
class SignalGenerateFtraceEvent;
class SignalDeliverFtraceEvent;
class BinderTransactionAllocBufFtraceEvent;
class ClkSetRateFtraceEvent;
class ClkDisableFtraceEvent;
class ClkEnableFtraceEvent;
class FenceSignaledFtraceEvent;
class FenceEnableSignalFtraceEvent;
class FenceDestroyFtraceEvent;
class FenceInitFtraceEvent;
class IonHeapGrowFtraceEvent;
class IonHeapShrinkFtraceEvent;
class RssStatFtraceEvent;
class MmPagePcpuDrainFtraceEvent;
class MmPageFreeBatchedFtraceEvent;
class MmPageFreeFtraceEvent;
class MmPageAllocZoneLockedFtraceEvent;
class MmPageAllocExtfragFtraceEvent;
class MmPageAllocFtraceEvent;
class MigrateRetryFtraceEvent;
class MigratePagesStartFtraceEvent;
class MigratePagesEndFtraceEvent;
class KmemCacheFreeFtraceEvent;
class KmemCacheAllocNodeFtraceEvent;
class KmemCacheAllocFtraceEvent;
class KmallocNodeFtraceEvent;
class KmallocFtraceEvent;
class KfreeFtraceEvent;
class IonSecureCmaShrinkPoolStartFtraceEvent;
class IonSecureCmaShrinkPoolEndFtraceEvent;
class IonSecureCmaAllocateStartFtraceEvent;
class IonSecureCmaAllocateEndFtraceEvent;
class IonSecureCmaAddToPoolStartFtraceEvent;
class IonSecureCmaAddToPoolEndFtraceEvent;
class IonPrefetchingFtraceEvent;
class IonCpSecureBufferStartFtraceEvent;
class IonCpSecureBufferEndFtraceEvent;
class IonCpAllocRetryFtraceEvent;
class IonAllocBufferStartFtraceEvent;
class IonAllocBufferFallbackFtraceEvent;
class IonAllocBufferFailFtraceEvent;
class IonAllocBufferEndFtraceEvent;
class IommuSecPtblMapRangeStartFtraceEvent;
class IommuSecPtblMapRangeEndFtraceEvent;
class IommuMapRangeFtraceEvent;
class DmaAllocContiguousRetryFtraceEvent;
class AllocPagesSysStartFtraceEvent;
class AllocPagesSysFailFtraceEvent;
class AllocPagesSysEndFtraceEvent;
class AllocPagesIommuStartFtraceEvent;
class AllocPagesIommuFailFtraceEvent;
class AllocPagesIommuEndFtraceEvent;
class F2fsWriteEndFtraceEvent;
class F2fsWriteCheckpointFtraceEvent;
class F2fsWriteBeginFtraceEvent;
class F2fsVmPageMkwriteFtraceEvent;
class F2fsUnlinkExitFtraceEvent;
class F2fsUnlinkEnterFtraceEvent;
class F2fsTruncatePartialNodesFtraceEvent;
class F2fsTruncateNodesExitFtraceEvent;
class F2fsTruncateNodesEnterFtraceEvent;
class F2fsTruncateNodeFtraceEvent;
class F2fsTruncateInodeBlocksExitFtraceEvent;
class F2fsTruncateInodeBlocksEnterFtraceEvent;
class F2fsTruncateDataBlocksRangeFtraceEvent;
class F2fsTruncateBlocksExitFtraceEvent;
class F2fsTruncateBlocksEnterFtraceEvent;
class F2fsTruncateFtraceEvent;
class F2fsSyncFsFtraceEvent;
class F2fsSyncFileExitFtraceEvent;
class F2fsSyncFileEnterFtraceEvent;
class F2fsSubmitWritePageFtraceEvent;
class F2fsSetPageDirtyFtraceEvent;
class F2fsReserveNewBlockFtraceEvent;
class F2fsReadpageFtraceEvent;
class F2fsNewInodeFtraceEvent;
class F2fsIgetExitFtraceEvent;
class F2fsIgetFtraceEvent;
class F2fsGetVictimFtraceEvent;
class F2fsGetDataBlockFtraceEvent;
class F2fsFallocateFtraceEvent;
class F2fsEvictInodeFtraceEvent;
class F2fsDoSubmitBioFtraceEvent;
class SchedProcessWaitFtraceEvent;
class SchedProcessHangFtraceEvent;
class SchedProcessFreeFtraceEvent;
class SchedProcessForkFtraceEvent;
class SchedProcessExitFtraceEvent;
class SchedProcessExecFtraceEvent;
class TaskRenameFtraceEvent;
class TaskNewtaskFtraceEvent;
class Ext4ZeroRangeFtraceEvent;
class Ext4WritepagesResultFtraceEvent;
class Ext4WritepagesFtraceEvent;
class Ext4WritepageFtraceEvent;
class Ext4WriteEndFtraceEvent;
class Ext4WriteBeginFtraceEvent;
class Ext4UnlinkExitFtraceEvent;
class Ext4UnlinkEnterFtraceEvent;
class Ext4TruncateExitFtraceEvent;
class Ext4TruncateEnterFtraceEvent;
class Ext4TrimExtentFtraceEvent;
class Ext4TrimAllFreeFtraceEvent;
class Ext4SyncFsFtraceEvent;
class Ext4RequestInodeFtraceEvent;
class Ext4RequestBlocksFtraceEvent;
class Ext4RemoveBlocksFtraceEvent;
class Ext4ReleasepageFtraceEvent;
class Ext4ReadpageFtraceEvent;
class Ext4ReadBlockBitmapLoadFtraceEvent;
class Ext4PunchHoleFtraceEvent;
class Ext4OtherInodeUpdateTimeFtraceEvent;
class Ext4MballocPreallocFtraceEvent;
class Ext4MballocFreeFtraceEvent;
class Ext4MballocDiscardFtraceEvent;
class Ext4MballocAllocFtraceEvent;
class Ext4MbReleaseInodePaFtraceEvent;
class Ext4MbReleaseGroupPaFtraceEvent;
class Ext4MbNewInodePaFtraceEvent;
class Ext4MbNewGroupPaFtraceEvent;
class Ext4MbDiscardPreallocationsFtraceEvent;
class Ext4MbBuddyBitmapLoadFtraceEvent;
class Ext4MbBitmapLoadFtraceEvent;
class Ext4MarkInodeDirtyFtraceEvent;
class Ext4LoadInodeBitmapFtraceEvent;
class Ext4LoadInodeFtraceEvent;
class Ext4JournalledWriteEndFtraceEvent;
class Ext4JournalledInvalidatepageFtraceEvent;
class Ext4JournalStartReservedFtraceEvent;
class Ext4JournalStartFtraceEvent;
class Ext4InvalidatepageFtraceEvent;
class Ext4InsertRangeFtraceEvent;
class Ext4IndMapBlocksExitFtraceEvent;
class Ext4IndMapBlocksEnterFtraceEvent;
class Ext4GetReservedClusterAllocFtraceEvent;
class Ext4GetImpliedClusterAllocExitFtraceEvent;
class Ext4FreeInodeFtraceEvent;
class Ext4FreeBlocksFtraceEvent;
class Ext4ForgetFtraceEvent;
class Ext4FindDelallocRangeFtraceEvent;
class Ext4FallocateExitFtraceEvent;
class Ext4FallocateEnterFtraceEvent;
class Ext4ExtShowExtentFtraceEvent;
class Ext4ExtRmLeafFtraceEvent;
class Ext4ExtRmIdxFtraceEvent;
class Ext4ExtRemoveSpaceDoneFtraceEvent;
class Ext4ExtRemoveSpaceFtraceEvent;
class Ext4ExtPutInCacheFtraceEvent;
class Ext4ExtMapBlocksExitFtraceEvent;
class Ext4ExtMapBlocksEnterFtraceEvent;
class Ext4ExtLoadExtentFtraceEvent;
class Ext4ExtInCacheFtraceEvent;
class Ext4ExtHandleUnwrittenExtentsFtraceEvent;
class Ext4ExtConvertToInitializedFastpathFtraceEvent;
class Ext4ExtConvertToInitializedEnterFtraceEvent;
class Ext4EvictInodeFtraceEvent;
class Ext4EsShrinkScanExitFtraceEvent;
class Ext4EsShrinkScanEnterFtraceEvent;
class Ext4EsShrinkCountFtraceEvent;
class Ext4EsShrinkFtraceEvent;
class Ext4EsRemoveExtentFtraceEvent;
class Ext4EsLookupExtentExitFtraceEvent;
class Ext4EsLookupExtentEnterFtraceEvent;
class Ext4EsInsertExtentFtraceEvent;
class Ext4EsFindDelayedExtentRangeExitFtraceEvent;
class Ext4EsFindDelayedExtentRangeEnterFtraceEvent;
class Ext4EsCacheExtentFtraceEvent;
class Ext4DropInodeFtraceEvent;
class Ext4DiscardPreallocationsFtraceEvent;
class Ext4DiscardBlocksFtraceEvent;
class Ext4DirectIOExitFtraceEvent;
class Ext4DirectIOEnterFtraceEvent;
class Ext4DaWritePagesExtentFtraceEvent;
class Ext4DaWritePagesFtraceEvent;
class Ext4DaUpdateReserveSpaceFtraceEvent;
class Ext4DaReserveSpaceFtraceEvent;
class Ext4DaReleaseSpaceFtraceEvent;
class Ext4CollapseRangeFtraceEvent;
class Ext4BeginOrderedTruncateFtraceEvent;
class Ext4AllocateInodeFtraceEvent;
class Ext4AllocateBlocksFtraceEvent;
class Ext4AllocDaBlocksFtraceEvent;
class BlockUnplugFtraceEvent;
class BlockTouchBufferFtraceEvent;
class BlockSplitFtraceEvent;
class BlockSleeprqFtraceEvent;
class BlockRqRequeueFtraceEvent;
class BlockRqRemapFtraceEvent;
class BlockRqInsertFtraceEvent;
class BlockRqCompleteFtraceEvent;
class BlockRqAbortFtraceEvent;
class BlockPlugFtraceEvent;
class BlockGetrqFtraceEvent;
class BlockDirtyBufferFtraceEvent;
class BlockBioRemapFtraceEvent;
class BlockBioQueueFtraceEvent;
class BlockBioFrontmergeFtraceEvent;
class BlockBioCompleteFtraceEvent;
class BlockBioBounceFtraceEvent;
class BlockBioBackmergeFtraceEvent;
class SchedWakeupNewFtraceEvent;
class SuspendResumeFtraceEvent;
class MmCompactionWakeupKcompactdFtraceEvent;
class MmCompactionTryToCompactPagesFtraceEvent;
class MmCompactionSuitableFtraceEvent;
class MmCompactionMigratepagesFtraceEvent;
class MmCompactionKcompactdWakeFtraceEvent;
class MmCompactionKcompactdSleepFtraceEvent;
class MmCompactionIsolateMigratepagesFtraceEvent;
class MmCompactionIsolateFreepagesFtraceEvent;
class MmCompactionFinishedFtraceEvent;
class MmCompactionEndFtraceEvent;
class MmCompactionDeferResetFtraceEvent;
class MmCompactionDeferredFtraceEvent;
class MmCompactionDeferCompactionFtraceEvent;
class MmCompactionBeginFtraceEvent;
class MmFilemapDeleteFromPageCacheFtraceEvent;
class MmFilemapAddToPageCacheFtraceEvent;
class RotatorBwAoAsContextFtraceEvent;
class MdpPerfUpdateBusFtraceEvent;
class MdpPerfPrefillCalcFtraceEvent;
class MdpCmdWaitPingpongFtraceEvent;
class MdpVideoUnderrunDoneFtraceEvent;
class MdpPerfSetWmLevelsFtraceEvent;
class MdpMixerUpdateFtraceEvent;
class MdpCmdReleaseBwFtraceEvent;
class MdpTraceCounterFtraceEvent;
class MdpPerfSetQosLutsFtraceEvent;
class MdpMisrCrcFtraceEvent;
class MdpCmdReadptrDoneFtraceEvent;
class MdpSsppSetFtraceEvent;
class MdpPerfSetPanicLutsFtraceEvent;
class MdpCompareBwFtraceEvent;
class MdpCmdPingpongDoneFtraceEvent;
class TracingMarkWriteFtraceEvent;
class MdpSsppChangeFtraceEvent;
class MdpPerfSetOtFtraceEvent;
class MdpCommitFtraceEvent;
class MdpCmdKickoffFtraceEvent;
class CgroupSetupRootFtraceEvent;
class CgroupRenameFtraceEvent;
class CgroupReleaseFtraceEvent;
class CgroupDestroyRootFtraceEvent;
class CgroupTransferTasksFtraceEvent;
class CgroupRmdirFtraceEvent;
class CgroupRemountFtraceEvent;
class CgroupMkdirFtraceEvent;
class CgroupAttachTaskFtraceEvent;
class RegulatorSetVoltageCompleteFtraceEvent;
class RegulatorSetVoltageFtraceEvent;
class RegulatorEnableDelayFtraceEvent;
class RegulatorEnableCompleteFtraceEvent;
class RegulatorEnableFtraceEvent;
class RegulatorDisableCompleteFtraceEvent;
class RegulatorDisableFtraceEvent;
class WorkqueueQueueWorkFtraceEvent;
class WorkqueueExecuteStartFtraceEvent;
class WorkqueueExecuteEndFtraceEvent;
class WorkqueueActivateWorkFtraceEvent;
class BinderUnlockFtraceEvent;
class BinderLockedFtraceEvent;
class BinderLockFtraceEvent;
class BinderSetPriorityFtraceEvent;
class BinderTransactionReceivedFtraceEvent;
class BinderTransactionFtraceEvent;
class MmVmscanKswapdSleepFtraceEvent;
class MmVmscanKswapdWakeFtraceEvent;
class MmVmscanDirectReclaimEndFtraceEvent;
class MmVmscanDirectReclaimBeginFtraceEvent;
class BlockRqIssueFtraceEvent;
class Ext4SyncFileExitFtraceEvent;
class Ext4SyncFileEnterFtraceEvent;
class Ext4DaWriteEndFtraceEvent;
class Ext4DaWriteBeginFtraceEvent;
class SyncWaitFtraceEvent;
class SyncTimelineFtraceEvent;
class SyncPtFtraceEvent;
class IrqHandlerExitFtraceEvent;
class IrqHandlerEntryFtraceEvent;
class LowmemoryKillFtraceEvent;
class SmbusReplyFtraceEvent;
class SmbusResultFtraceEvent;
class SmbusWriteFtraceEvent;
class SmbusReadFtraceEvent;
class I2cReplyFtraceEvent;
class I2cResultFtraceEvent;
class I2cWriteFtraceEvent;
class I2cReadFtraceEvent;
class SoftirqRaiseFtraceEvent;
class SoftirqExitFtraceEvent;
class SoftirqEntryFtraceEvent;
class IpiRaiseFtraceEvent;
class IpiExitFtraceEvent;
class IpiEntryFtraceEvent;
class SchedWakingFtraceEvent;
class SchedCpuHotplugFtraceEvent;
class SchedBlockedReasonFtraceEvent;
class SchedWakeupFtraceEvent;
class ClockSetRateFtraceEvent;
class ClockDisableFtraceEvent;
class ClockEnableFtraceEvent;
class CpuIdleFtraceEvent;
class CpuFrequencyLimitsFtraceEvent;
class CpuFrequencyFtraceEvent;
class SchedSwitchFtraceEvent;
class PrintFtraceEvent;
class ThreadDescriptor;
class ProcessDescriptor;
class TrackDescriptor;
class CounterDescriptor;
class ChromeThreadDescriptor;
class ChromeProcessDescriptor;
class DeobfuscationMapping;
class ObfuscatedClass;
class ObfuscatedMember;
class ModuleSymbols;
class AddressSymbols;
class Line;
class EntityStateResidency;
class EntityStateResidency_StateResidency;
class EntityStateResidency_PowerEntityState;
class AndroidSystemProperty;
class AndroidSystemProperty_PropertyValue;
class StatsdAtom;
class Atom;
class AndroidGameInterventionList;
class AndroidGameInterventionList_GamePackageInfo;
class AndroidGameInterventionList_GameModeInfo;
class TranslationTable;
class ProcessTrackNameTranslationTable;
class ProcessTrackNameTranslationTable_RawToDeobfuscatedNameEntry;
class SliceNameTranslationTable;
class SliceNameTranslationTable_RawToDeobfuscatedNameEntry;
class ChromePerformanceMarkTranslationTable;
class ChromePerformanceMarkTranslationTable_MarkHashToNameEntry;
class ChromePerformanceMarkTranslationTable_SiteHashToNameEntry;
class ChromeUserEventTranslationTable;
class ChromeUserEventTranslationTable_ActionHashToNameEntry;
class ChromeHistorgramTranslationTable;
class ChromeHistorgramTranslationTable_HashToNameEntry;
class AndroidCameraSessionStats;
class AndroidCameraSessionStats_CameraGraph;
class AndroidCameraSessionStats_CameraGraph_CameraEdge;
class AndroidCameraSessionStats_CameraGraph_CameraNode;
class AndroidCameraFrameEvent;
class AndroidCameraFrameEvent_CameraNodeProcessingDetails;
class UiState;
class UiState_HighlightProcess;
class AndroidEnergyEstimationBreakdown;
class AndroidEnergyEstimationBreakdown_EnergyUidBreakdown;
class AndroidEnergyConsumerDescriptor;
class AndroidEnergyConsumer;
class FrameTimelineEvent;
class FrameTimelineEvent_FrameEnd;
class FrameTimelineEvent_ActualSurfaceFrameStart;
class FrameTimelineEvent_ExpectedSurfaceFrameStart;
class FrameTimelineEvent_ActualDisplayFrameStart;
class FrameTimelineEvent_ExpectedDisplayFrameStart;
class MemoryTrackerSnapshot;
class MemoryTrackerSnapshot_ProcessSnapshot;
class MemoryTrackerSnapshot_ProcessSnapshot_MemoryEdge;
class MemoryTrackerSnapshot_ProcessSnapshot_MemoryNode;
class MemoryTrackerSnapshot_ProcessSnapshot_MemoryNode_MemoryNodeEntry;
class GpuMemTotalEvent;
class InitialDisplayState;
class TracingServiceEvent;
class SmapsPacket;
class SmapsEntry;
class CpuInfo;
class CpuInfo_Cpu;
class PerfSample;
class PerfSample_ProducerEvent;
class VulkanApiEvent;
class VulkanApiEvent_VkQueueSubmit;
class VulkanApiEvent_VkDebugUtilsObjectName;
class GpuLog;
class VulkanMemoryEvent;
class VulkanMemoryEventAnnotation;
class GraphicsFrameEvent;
class GraphicsFrameEvent_BufferEvent;
class HeapGraph;
class HeapGraphType;
class HeapGraphRoot;
class HeapGraphObject;
class StreamingProfilePacket;
class GpuRenderStageEvent;
class GpuRenderStageEvent_Specifications;
class GpuRenderStageEvent_Specifications_Description;
class GpuRenderStageEvent_Specifications_ContextSpec;
class GpuRenderStageEvent_ExtraData;
class GpuCounterEvent;
class GpuCounterEvent_GpuCounter;
class GpuCounterDescriptor;
class GpuCounterDescriptor_GpuCounterBlock;
class GpuCounterDescriptor_GpuCounterSpec;
class ChromeMetadataPacket;
class ChromeMetadataPacket_FinchHash;
class BackgroundTracingMetadata;
class BackgroundTracingMetadata_TriggerRule;
class BackgroundTracingMetadata_TriggerRule_NamedRule;
class BackgroundTracingMetadata_TriggerRule_HistogramRule;
class PerfettoMetatrace;
class PerfettoMetatrace_InternedString;
class PerfettoMetatrace_Arg;
class ChromeBenchmarkMetadata;
class PackagesList;
class PackagesList_PackageInfo;
class ChromeTrigger;
class Trigger;
class SystemInfo;
class Utsname;
class AndroidLogPacket;
class AndroidLogPacket_Stats;
class AndroidLogPacket_LogEvent;
class AndroidLogPacket_LogEvent_Arg;
class PowerRails;
class PowerRails_EnergyData;
class PowerRails_RailDescriptor;
class BatteryCounters;
class StreamingFree;
class StreamingAllocation;
class ProfilePacket;
class ProfilePacket_ProcessHeapSamples;
class ProfilePacket_HeapSample;
class ProfilePacket_ProcessStats;
class ProfilePacket_Histogram;
class ProfilePacket_Histogram_Bucket;
class TraceStats;
class TraceStats_FilterStats;
class TraceStats_WriterStats;
class TraceStats_BufferStats;
class FtraceStats;
class FtraceCpuStats;
class TraceConfig;
class TraceConfig_SessionSemaphore;
class TraceConfig_CmdTraceStartDelay;
class TraceConfig_AndroidReportConfig;
class TraceConfig_TraceFilter;
class TraceConfig_TraceFilter_StringFilterChain;
class TraceConfig_TraceFilter_StringFilterRule;
class TraceConfig_IncidentReportConfig;
class TraceConfig_IncrementalStateConfig;
class TraceConfig_TriggerConfig;
class TraceConfig_TriggerConfig_Trigger;
class TraceConfig_GuardrailOverrides;
class TraceConfig_StatsdMetadata;
class TraceConfig_ProducerConfig;
class TraceConfig_BuiltinDataSource;
class TraceConfig_DataSource;
class DataSourceConfig;
class TestConfig;
class TestConfig_DummyFields;
class InterceptorConfig;
class ConsoleConfig;
class ChromeConfig;
class SystemInfoConfig;
class TraceConfig_BufferConfig;
class TraceUuid;
class TrackEvent;
class TrackEvent_LegacyEvent;
class ChromeMojoEventInfo;
class ChromeMessagePump;
class PixelModemEventInsight;
class Screenshot;
class ChromeActiveProcesses;
class ChromeContentSettingsEventInfo;
class ChromeWindowHandleEventInfo;
class ChromeRendererSchedulerState;
class ChromeApplicationStateInfo;
class ChromeFrameReporter;
class ChromeLatencyInfo;
class ChromeLatencyInfo_ComponentInfo;
class ChromeHistogramSample;
class ChromeLegacyIpc;
class ChromeKeyedService;
class ChromeUserEvent;
class ChromeCompositorSchedulerState;
class CompositorTimingHistory;
class BeginFrameSourceState;
class BeginFrameArgs;
class BeginFrameObserverState;
class BeginImplFrameArgs;
class BeginImplFrameArgs_TimestampsInUs;
class ChromeCompositorStateMachine;
class ChromeCompositorStateMachine_MinorState;
class ChromeCompositorStateMachine_MajorState;
class LogMessage;
class TaskExecution;
class SysStats;
class SysStats_PsiSample;
class SysStats_DiskStat;
class SysStats_BuddyInfo;
class SysStats_DevfreqValue;
class SysStats_InterruptCount;
class SysStats_CpuTimes;
class SysStats_VmstatValue;
class SysStats_MeminfoValue;
class ChromeEventBundle;
class ChromeStringTableEntry;
class ChromeLegacyJsonTrace;
class ChromeMetadata;
class ChromeTraceEvent;
class ChromeTraceEvent_Arg;
class ChromeTracedValue;
class InodeFileMap;
class InodeFileMap_Entry;
class ProcessStats;
class ProcessStats_Process;
class ProcessStats_FDInfo;
class ProcessStats_Thread;
class ProcessTree;
class ProcessTree_Thread;
class ProcessTree_Process;
enum TracePacket_SequenceFlags : int;
enum PerfEvents_Counter : int;
enum PerfEvents_PerfClock : int;
enum InternedV8JsScript_Type : int;
enum InternedV8JsFunction_Kind : int;
enum TrafficDirection : int;
enum InternedGpuRenderStageSpecification_RenderStageCategory : int;
enum InternedGraphicsContext_Api : int;
enum DebugAnnotation_NestedValue_NestedType : int;
enum BuiltinClock : int;
enum ClockSnapshot_Clock_BuiltinClocks : int;
enum V8WasmCode_Tier : int;
enum V8InternalCode_Type : int;
enum V8JsCode_Tier : int;
enum ReadyThreadEtwEvent_AdjustReason : int;
enum ReadyThreadEtwEvent_TraceFlag : int;
enum CSwitchEtwEvent_OldThreadWaitReason : int;
enum CSwitchEtwEvent_OldThreadWaitMode : int;
enum CSwitchEtwEvent_OldThreadState : int;
enum ProtoLogLevel : int;
enum DisplayState_Changes : int;
enum LayerState_ChangesLsb : int;
enum LayerState_ChangesMsb : int;
enum LayerState_Flags : int;
enum LayerState_DropInputMode : int;
enum TrustedOverlay : int;
enum LayerState_BufferData_BufferDataChange : int;
enum LayerState_BufferData_PixelFormat : int;
enum HwcCompositionType : int;
enum FieldDescriptorProto_Type : int;
enum FieldDescriptorProto_Label : int;
enum FtraceClock : int;
enum FtraceParseStatus : int;
enum ThreadDescriptor_ChromeThreadType : int;
enum ProcessDescriptor_ChromeProcessType : int;
enum CounterDescriptor_BuiltinCounterType : int;
enum CounterDescriptor_Unit : int;
enum ChromeThreadDescriptor_ThreadType : int;
enum ChromeProcessDescriptor_ProcessType : int;
enum AndroidCameraFrameEvent_CaptureResultStatus : int;
enum FrameTimelineEvent_JankType : int;
enum FrameTimelineEvent_JankSeverityType : int;
enum FrameTimelineEvent_PresentType : int;
enum FrameTimelineEvent_PredictionType : int;
enum MemoryTrackerSnapshot_LevelOfDetail : int;
enum MemoryTrackerSnapshot_ProcessSnapshot_MemoryNode_MemoryNodeEntry_Units : int;
enum PerfSample_SampleSkipReason : int;
enum Profiling_CpuMode : int;
enum Profiling_StackUnwindError : int;
enum PerfSample_ProducerEvent_DataSourceStopReason : int;
enum GpuLog_Severity : int;
enum VulkanMemoryEvent_Source : int;
enum VulkanMemoryEvent_Operation : int;
enum VulkanMemoryEvent_AllocationScope : int;
enum GraphicsFrameEvent_BufferEventType : int;
enum HeapGraphType_Kind : int;
enum HeapGraphRoot_Type : int;
enum GpuCounterDescriptor_GpuCounterGroup : int;
enum GpuCounterDescriptor_MeasureUnit : int;
enum BackgroundTracingMetadata_TriggerRule_TriggerType : int;
enum BackgroundTracingMetadata_TriggerRule_NamedRule_EventType : int;
enum AndroidLogId : int;
enum AndroidLogPriority : int;
enum ProfilePacket_ProcessHeapSamples_ClientError : int;
enum TraceStats_FinalFlushOutcome : int;
enum FtraceStats_Phase : int;
enum TraceConfig_LockdownModeOperation : int;
enum TraceConfig_CompressionType : int;
enum TraceConfig_StatsdLogging : int;
enum TraceConfig_TraceFilter_StringFilterPolicy : int;
enum TraceConfig_TriggerConfig_TriggerMode : int;
enum DataSourceConfig_SessionInitiator : int;
enum ConsoleConfig_Output : int;
enum ChromeConfig_ClientPriority : int;
enum TraceConfig_BufferConfig_FillPolicy : int;
enum TrackEvent_Type : int;
enum TrackEvent_LegacyEvent_FlowDirection : int;
enum TrackEvent_LegacyEvent_InstantEventScope : int;
enum ChromeRAILMode : int;
enum ChromeApplicationStateInfo_ChromeApplicationState : int;
enum ChromeFrameReporter_State : int;
enum ChromeFrameReporter_FrameDropReason : int;
enum ChromeFrameReporter_ScrollState : int;
enum ChromeFrameReporter_FrameType : int;
enum ChromeLatencyInfo_Step : int;
enum ChromeLatencyInfo_LatencyComponentType : int;
enum ChromeLegacyIpc_MessageClass : int;
enum ChromeCompositorSchedulerState_BeginImplFrameDeadlineMode : int;
enum ChromeCompositorSchedulerAction : int;
enum BeginFrameArgs_BeginFrameArgsType : int;
enum BeginImplFrameArgs_State : int;
enum ChromeCompositorStateMachine_MinorState_TreePriority : int;
enum ChromeCompositorStateMachine_MinorState_ScrollHandlerState : int;
enum ChromeCompositorStateMachine_MajorState_BeginImplFrameState : int;
enum ChromeCompositorStateMachine_MajorState_BeginMainFrameState : int;
enum ChromeCompositorStateMachine_MajorState_LayerTreeFrameSinkState : int;
enum ChromeCompositorStateMachine_MajorState_ForcedRedrawOnTimeoutState : int;
enum LogMessage_Priority : int;
enum SysStats_PsiSample_PsiResource : int;
enum VmstatCounters : int;
enum MeminfoCounters : int;
enum ChromeLegacyJsonTrace_TraceType : int;
enum ChromeTracedValue_NestedType : int;
enum InodeFileMap_Entry_Type : int;
}  // namespace perfetto
}  // namespace protos
}  // namespace gen

namespace protozero {
class Message;
}  // namespace protozero

namespace perfetto {
namespace protos {
namespace gen {
enum TracePacket_SequenceFlags : int {
  TracePacket_SequenceFlags_SEQ_UNSPECIFIED = 0,
  TracePacket_SequenceFlags_SEQ_INCREMENTAL_STATE_CLEARED = 1,
  TracePacket_SequenceFlags_SEQ_NEEDS_INCREMENTAL_STATE = 2,
};

class PERFETTO_EXPORT_COMPONENT TracePacket : public ::protozero::CppMessageObj {
 public:
  using SequenceFlags = TracePacket_SequenceFlags;
  static constexpr auto SEQ_UNSPECIFIED = TracePacket_SequenceFlags_SEQ_UNSPECIFIED;
  static constexpr auto SEQ_INCREMENTAL_STATE_CLEARED = TracePacket_SequenceFlags_SEQ_INCREMENTAL_STATE_CLEARED;
  static constexpr auto SEQ_NEEDS_INCREMENTAL_STATE = TracePacket_SequenceFlags_SEQ_NEEDS_INCREMENTAL_STATE;
  static constexpr auto SequenceFlags_MIN = TracePacket_SequenceFlags_SEQ_UNSPECIFIED;
  static constexpr auto SequenceFlags_MAX = TracePacket_SequenceFlags_SEQ_NEEDS_INCREMENTAL_STATE;
  enum FieldNumbers {
    kTimestampFieldNumber = 8,
    kTimestampClockIdFieldNumber = 58,
    kProcessTreeFieldNumber = 2,
    kProcessStatsFieldNumber = 9,
    kInodeFileMapFieldNumber = 4,
    kChromeEventsFieldNumber = 5,
    kClockSnapshotFieldNumber = 6,
    kSysStatsFieldNumber = 7,
    kTrackEventFieldNumber = 11,
    kTraceUuidFieldNumber = 89,
    kTraceConfigFieldNumber = 33,
    kFtraceStatsFieldNumber = 34,
    kTraceStatsFieldNumber = 35,
    kProfilePacketFieldNumber = 37,
    kStreamingAllocationFieldNumber = 74,
    kStreamingFreeFieldNumber = 75,
    kBatteryFieldNumber = 38,
    kPowerRailsFieldNumber = 40,
    kAndroidLogFieldNumber = 39,
    kSystemInfoFieldNumber = 45,
    kTriggerFieldNumber = 46,
    kChromeTriggerFieldNumber = 109,
    kPackagesListFieldNumber = 47,
    kChromeBenchmarkMetadataFieldNumber = 48,
    kPerfettoMetatraceFieldNumber = 49,
    kChromeMetadataFieldNumber = 51,
    kGpuCounterEventFieldNumber = 52,
    kGpuRenderStageEventFieldNumber = 53,
    kStreamingProfilePacketFieldNumber = 54,
    kHeapGraphFieldNumber = 56,
    kGraphicsFrameEventFieldNumber = 57,
    kVulkanMemoryEventFieldNumber = 62,
    kGpuLogFieldNumber = 63,
    kVulkanApiEventFieldNumber = 65,
    kPerfSampleFieldNumber = 66,
    kCpuInfoFieldNumber = 67,
    kSmapsPacketFieldNumber = 68,
    kServiceEventFieldNumber = 69,
    kInitialDisplayStateFieldNumber = 70,
    kGpuMemTotalEventFieldNumber = 71,
    kMemoryTrackerSnapshotFieldNumber = 73,
    kFrameTimelineEventFieldNumber = 76,
    kAndroidEnergyEstimationBreakdownFieldNumber = 77,
    kUiStateFieldNumber = 78,
    kAndroidCameraFrameEventFieldNumber = 80,
    kAndroidCameraSessionStatsFieldNumber = 81,
    kTranslationTableFieldNumber = 82,
    kAndroidGameInterventionListFieldNumber = 83,
    kStatsdAtomFieldNumber = 84,
    kAndroidSystemPropertyFieldNumber = 86,
    kEntityStateResidencyFieldNumber = 91,
    kProfiledFrameSymbolsFieldNumber = 55,
    kModuleSymbolsFieldNumber = 61,
    kDeobfuscationMappingFieldNumber = 64,
    kTrackDescriptorFieldNumber = 60,
    kProcessDescriptorFieldNumber = 43,
    kThreadDescriptorFieldNumber = 44,
    kFtraceEventsFieldNumber = 1,
    kSynchronizationMarkerFieldNumber = 36,
    kCompressedPacketsFieldNumber = 50,
    kExtensionDescriptorFieldNumber = 72,
    kNetworkPacketFieldNumber = 88,
    kNetworkPacketBundleFieldNumber = 92,
    kTrackEventRangeOfInterestFieldNumber = 90,
    kSurfaceflingerLayersSnapshotFieldNumber = 93,
    kSurfaceflingerTransactionsFieldNumber = 94,
    kShellTransitionFieldNumber = 96,
    kShellHandlerMappingsFieldNumber = 97,
    kProtologMessageFieldNumber = 104,
    kProtologViewerConfigFieldNumber = 105,
    kWinscopeExtensionsFieldNumber = 112,
    kEtwEventsFieldNumber = 95,
    kV8JsCodeFieldNumber = 99,
    kV8InternalCodeFieldNumber = 100,
    kV8WasmCodeFieldNumber = 101,
    kV8RegExpCodeFieldNumber = 102,
    kV8CodeMoveFieldNumber = 103,
    kRemoteClockSyncFieldNumber = 107,
    kPixelModemEventsFieldNumber = 110,
    kPixelModemTokenDatabaseFieldNumber = 111,
    kForTestingFieldNumber = 900,
    kTrustedUidFieldNumber = 3,
    kTrustedPacketSequenceIdFieldNumber = 10,
    kTrustedPidFieldNumber = 79,
    kInternedDataFieldNumber = 12,
    kSequenceFlagsFieldNumber = 13,
    kIncrementalStateClearedFieldNumber = 41,
    kTracePacketDefaultsFieldNumber = 59,
    kPreviousPacketDroppedFieldNumber = 42,
    kFirstPacketOnSequenceFieldNumber = 87,
    kMachineIdFieldNumber = 98,
  };

  TracePacket();
  ~TracePacket() override;
  TracePacket(TracePacket&&) noexcept;
  TracePacket& operator=(TracePacket&&);
  TracePacket(const TracePacket&);
  TracePacket& operator=(const TracePacket&);
  bool operator==(const TracePacket&) const;
  bool operator!=(const TracePacket& other) const { return !(*this == other); }

  bool ParseFromArray(const void*, size_t) override;
  std::string SerializeAsString() const override;
  std::vector<uint8_t> SerializeAsArray() const override;
  void Serialize(::protozero::Message*) const;

  bool has_timestamp() const { return _has_field_[8]; }
  uint64_t timestamp() const { return timestamp_; }
  void set_timestamp(uint64_t value) { timestamp_ = value; _has_field_.set(8); }

  bool has_timestamp_clock_id() const { return _has_field_[58]; }
  uint32_t timestamp_clock_id() const { return timestamp_clock_id_; }
  void set_timestamp_clock_id(uint32_t value) { timestamp_clock_id_ = value; _has_field_.set(58); }

  bool has_process_tree() const { return _has_field_[2]; }
  const ProcessTree& process_tree() const { return *process_tree_; }
  ProcessTree* mutable_process_tree() { _has_field_.set(2); return process_tree_.get(); }

  bool has_process_stats() const { return _has_field_[9]; }
  const ProcessStats& process_stats() const { return *process_stats_; }
  ProcessStats* mutable_process_stats() { _has_field_.set(9); return process_stats_.get(); }

  bool has_inode_file_map() const { return _has_field_[4]; }
  const InodeFileMap& inode_file_map() const { return *inode_file_map_; }
  InodeFileMap* mutable_inode_file_map() { _has_field_.set(4); return inode_file_map_.get(); }

  bool has_chrome_events() const { return _has_field_[5]; }
  const ChromeEventBundle& chrome_events() const { return *chrome_events_; }
  ChromeEventBundle* mutable_chrome_events() { _has_field_.set(5); return chrome_events_.get(); }

  bool has_clock_snapshot() const { return _has_field_[6]; }
  const ClockSnapshot& clock_snapshot() const { return *clock_snapshot_; }
  ClockSnapshot* mutable_clock_snapshot() { _has_field_.set(6); return clock_snapshot_.get(); }

  bool has_sys_stats() const { return _has_field_[7]; }
  const SysStats& sys_stats() const { return *sys_stats_; }
  SysStats* mutable_sys_stats() { _has_field_.set(7); return sys_stats_.get(); }

  bool has_track_event() const { return _has_field_[11]; }
  const TrackEvent& track_event() const { return *track_event_; }
  TrackEvent* mutable_track_event() { _has_field_.set(11); return track_event_.get(); }

  bool has_trace_uuid() const { return _has_field_[89]; }
  const TraceUuid& trace_uuid() const { return *trace_uuid_; }
  TraceUuid* mutable_trace_uuid() { _has_field_.set(89); return trace_uuid_.get(); }

  bool has_trace_config() const { return _has_field_[33]; }
  const TraceConfig& trace_config() const { return *trace_config_; }
  TraceConfig* mutable_trace_config() { _has_field_.set(33); return trace_config_.get(); }

  bool has_ftrace_stats() const { return _has_field_[34]; }
  const FtraceStats& ftrace_stats() const { return *ftrace_stats_; }
  FtraceStats* mutable_ftrace_stats() { _has_field_.set(34); return ftrace_stats_.get(); }

  bool has_trace_stats() const { return _has_field_[35]; }
  const TraceStats& trace_stats() const { return *trace_stats_; }
  TraceStats* mutable_trace_stats() { _has_field_.set(35); return trace_stats_.get(); }

  bool has_profile_packet() const { return _has_field_[37]; }
  const ProfilePacket& profile_packet() const { return *profile_packet_; }
  ProfilePacket* mutable_profile_packet() { _has_field_.set(37); return profile_packet_.get(); }

  bool has_streaming_allocation() const { return _has_field_[74]; }
  const StreamingAllocation& streaming_allocation() const { return *streaming_allocation_; }
  StreamingAllocation* mutable_streaming_allocation() { _has_field_.set(74); return streaming_allocation_.get(); }

  bool has_streaming_free() const { return _has_field_[75]; }
  const StreamingFree& streaming_free() const { return *streaming_free_; }
  StreamingFree* mutable_streaming_free() { _has_field_.set(75); return streaming_free_.get(); }

  bool has_battery() const { return _has_field_[38]; }
  const BatteryCounters& battery() const { return *battery_; }
  BatteryCounters* mutable_battery() { _has_field_.set(38); return battery_.get(); }

  bool has_power_rails() const { return _has_field_[40]; }
  const PowerRails& power_rails() const { return *power_rails_; }
  PowerRails* mutable_power_rails() { _has_field_.set(40); return power_rails_.get(); }

  bool has_android_log() const { return _has_field_[39]; }
  const AndroidLogPacket& android_log() const { return *android_log_; }
  AndroidLogPacket* mutable_android_log() { _has_field_.set(39); return android_log_.get(); }

  bool has_system_info() const { return _has_field_[45]; }
  const SystemInfo& system_info() const { return *system_info_; }
  SystemInfo* mutable_system_info() { _has_field_.set(45); return system_info_.get(); }

  bool has_trigger() const { return _has_field_[46]; }
  const Trigger& trigger() const { return *trigger_; }
  Trigger* mutable_trigger() { _has_field_.set(46); return trigger_.get(); }

  bool has_chrome_trigger() const { return _has_field_[109]; }
  const ChromeTrigger& chrome_trigger() const { return *chrome_trigger_; }
  ChromeTrigger* mutable_chrome_trigger() { _has_field_.set(109); return chrome_trigger_.get(); }

  bool has_packages_list() const { return _has_field_[47]; }
  const PackagesList& packages_list() const { return *packages_list_; }
  PackagesList* mutable_packages_list() { _has_field_.set(47); return packages_list_.get(); }

  bool has_chrome_benchmark_metadata() const { return _has_field_[48]; }
  const ChromeBenchmarkMetadata& chrome_benchmark_metadata() const { return *chrome_benchmark_metadata_; }
  ChromeBenchmarkMetadata* mutable_chrome_benchmark_metadata() { _has_field_.set(48); return chrome_benchmark_metadata_.get(); }

  bool has_perfetto_metatrace() const { return _has_field_[49]; }
  const PerfettoMetatrace& perfetto_metatrace() const { return *perfetto_metatrace_; }
  PerfettoMetatrace* mutable_perfetto_metatrace() { _has_field_.set(49); return perfetto_metatrace_.get(); }

  bool has_chrome_metadata() const { return _has_field_[51]; }
  const ChromeMetadataPacket& chrome_metadata() const { return *chrome_metadata_; }
  ChromeMetadataPacket* mutable_chrome_metadata() { _has_field_.set(51); return chrome_metadata_.get(); }

  bool has_gpu_counter_event() const { return _has_field_[52]; }
  const GpuCounterEvent& gpu_counter_event() const { return *gpu_counter_event_; }
  GpuCounterEvent* mutable_gpu_counter_event() { _has_field_.set(52); return gpu_counter_event_.get(); }

  bool has_gpu_render_stage_event() const { return _has_field_[53]; }
  const GpuRenderStageEvent& gpu_render_stage_event() const { return *gpu_render_stage_event_; }
  GpuRenderStageEvent* mutable_gpu_render_stage_event() { _has_field_.set(53); return gpu_render_stage_event_.get(); }

  bool has_streaming_profile_packet() const { return _has_field_[54]; }
  const StreamingProfilePacket& streaming_profile_packet() const { return *streaming_profile_packet_; }
  StreamingProfilePacket* mutable_streaming_profile_packet() { _has_field_.set(54); return streaming_profile_packet_.get(); }

  bool has_heap_graph() const { return _has_field_[56]; }
  const HeapGraph& heap_graph() const { return *heap_graph_; }
  HeapGraph* mutable_heap_graph() { _has_field_.set(56); return heap_graph_.get(); }

  bool has_graphics_frame_event() const { return _has_field_[57]; }
  const GraphicsFrameEvent& graphics_frame_event() const { return *graphics_frame_event_; }
  GraphicsFrameEvent* mutable_graphics_frame_event() { _has_field_.set(57); return graphics_frame_event_.get(); }

  bool has_vulkan_memory_event() const { return _has_field_[62]; }
  const VulkanMemoryEvent& vulkan_memory_event() const { return *vulkan_memory_event_; }
  VulkanMemoryEvent* mutable_vulkan_memory_event() { _has_field_.set(62); return vulkan_memory_event_.get(); }

  bool has_gpu_log() const { return _has_field_[63]; }
  const GpuLog& gpu_log() const { return *gpu_log_; }
  GpuLog* mutable_gpu_log() { _has_field_.set(63); return gpu_log_.get(); }

  bool has_vulkan_api_event() const { return _has_field_[65]; }
  const VulkanApiEvent& vulkan_api_event() const { return *vulkan_api_event_; }
  VulkanApiEvent* mutable_vulkan_api_event() { _has_field_.set(65); return vulkan_api_event_.get(); }

  bool has_perf_sample() const { return _has_field_[66]; }
  const PerfSample& perf_sample() const { return *perf_sample_; }
  PerfSample* mutable_perf_sample() { _has_field_.set(66); return perf_sample_.get(); }

  bool has_cpu_info() const { return _has_field_[67]; }
  const CpuInfo& cpu_info() const { return *cpu_info_; }
  CpuInfo* mutable_cpu_info() { _has_field_.set(67); return cpu_info_.get(); }

  bool has_smaps_packet() const { return _has_field_[68]; }
  const SmapsPacket& smaps_packet() const { return *smaps_packet_; }
  SmapsPacket* mutable_smaps_packet() { _has_field_.set(68); return smaps_packet_.get(); }

  bool has_service_event() const { return _has_field_[69]; }
  const TracingServiceEvent& service_event() const { return *service_event_; }
  TracingServiceEvent* mutable_service_event() { _has_field_.set(69); return service_event_.get(); }

  bool has_initial_display_state() const { return _has_field_[70]; }
  const InitialDisplayState& initial_display_state() const { return *initial_display_state_; }
  InitialDisplayState* mutable_initial_display_state() { _has_field_.set(70); return initial_display_state_.get(); }

  bool has_gpu_mem_total_event() const { return _has_field_[71]; }
  const GpuMemTotalEvent& gpu_mem_total_event() const { return *gpu_mem_total_event_; }
  GpuMemTotalEvent* mutable_gpu_mem_total_event() { _has_field_.set(71); return gpu_mem_total_event_.get(); }

  bool has_memory_tracker_snapshot() const { return _has_field_[73]; }
  const MemoryTrackerSnapshot& memory_tracker_snapshot() const { return *memory_tracker_snapshot_; }
  MemoryTrackerSnapshot* mutable_memory_tracker_snapshot() { _has_field_.set(73); return memory_tracker_snapshot_.get(); }

  bool has_frame_timeline_event() const { return _has_field_[76]; }
  const FrameTimelineEvent& frame_timeline_event() const { return *frame_timeline_event_; }
  FrameTimelineEvent* mutable_frame_timeline_event() { _has_field_.set(76); return frame_timeline_event_.get(); }

  bool has_android_energy_estimation_breakdown() const { return _has_field_[77]; }
  const AndroidEnergyEstimationBreakdown& android_energy_estimation_breakdown() const { return *android_energy_estimation_breakdown_; }
  AndroidEnergyEstimationBreakdown* mutable_android_energy_estimation_breakdown() { _has_field_.set(77); return android_energy_estimation_breakdown_.get(); }

  bool has_ui_state() const { return _has_field_[78]; }
  const UiState& ui_state() const { return *ui_state_; }
  UiState* mutable_ui_state() { _has_field_.set(78); return ui_state_.get(); }

  bool has_android_camera_frame_event() const { return _has_field_[80]; }
  const AndroidCameraFrameEvent& android_camera_frame_event() const { return *android_camera_frame_event_; }
  AndroidCameraFrameEvent* mutable_android_camera_frame_event() { _has_field_.set(80); return android_camera_frame_event_.get(); }

  bool has_android_camera_session_stats() const { return _has_field_[81]; }
  const AndroidCameraSessionStats& android_camera_session_stats() const { return *android_camera_session_stats_; }
  AndroidCameraSessionStats* mutable_android_camera_session_stats() { _has_field_.set(81); return android_camera_session_stats_.get(); }

  bool has_translation_table() const { return _has_field_[82]; }
  const TranslationTable& translation_table() const { return *translation_table_; }
  TranslationTable* mutable_translation_table() { _has_field_.set(82); return translation_table_.get(); }

  bool has_android_game_intervention_list() const { return _has_field_[83]; }
  const AndroidGameInterventionList& android_game_intervention_list() const { return *android_game_intervention_list_; }
  AndroidGameInterventionList* mutable_android_game_intervention_list() { _has_field_.set(83); return android_game_intervention_list_.get(); }

  bool has_statsd_atom() const { return _has_field_[84]; }
  const StatsdAtom& statsd_atom() const { return *statsd_atom_; }
  StatsdAtom* mutable_statsd_atom() { _has_field_.set(84); return statsd_atom_.get(); }

  bool has_android_system_property() const { return _has_field_[86]; }
  const AndroidSystemProperty& android_system_property() const { return *android_system_property_; }
  AndroidSystemProperty* mutable_android_system_property() { _has_field_.set(86); return android_system_property_.get(); }

  bool has_entity_state_residency() const { return _has_field_[91]; }
  const EntityStateResidency& entity_state_residency() const { return *entity_state_residency_; }
  EntityStateResidency* mutable_entity_state_residency() { _has_field_.set(91); return entity_state_residency_.get(); }

  bool has_profiled_frame_symbols() const { return _has_field_[55]; }
  const ProfiledFrameSymbols& profiled_frame_symbols() const { return *profiled_frame_symbols_; }
  ProfiledFrameSymbols* mutable_profiled_frame_symbols() { _has_field_.set(55); return profiled_frame_symbols_.get(); }

  bool has_module_symbols() const { return _has_field_[61]; }
  const ModuleSymbols& module_symbols() const { return *module_symbols_; }
  ModuleSymbols* mutable_module_symbols() { _has_field_.set(61); return module_symbols_.get(); }

  bool has_deobfuscation_mapping() const { return _has_field_[64]; }
  const DeobfuscationMapping& deobfuscation_mapping() const { return *deobfuscation_mapping_; }
  DeobfuscationMapping* mutable_deobfuscation_mapping() { _has_field_.set(64); return deobfuscation_mapping_.get(); }

  bool has_track_descriptor() const { return _has_field_[60]; }
  const TrackDescriptor& track_descriptor() const { return *track_descriptor_; }
  TrackDescriptor* mutable_track_descriptor() { _has_field_.set(60); return track_descriptor_.get(); }

  bool has_process_descriptor() const { return _has_field_[43]; }
  const ProcessDescriptor& process_descriptor() const { return *process_descriptor_; }
  ProcessDescriptor* mutable_process_descriptor() { _has_field_.set(43); return process_descriptor_.get(); }

  bool has_thread_descriptor() const { return _has_field_[44]; }
  const ThreadDescriptor& thread_descriptor() const { return *thread_descriptor_; }
  ThreadDescriptor* mutable_thread_descriptor() { _has_field_.set(44); return thread_descriptor_.get(); }

  bool has_ftrace_events() const { return _has_field_[1]; }
  const FtraceEventBundle& ftrace_events() const { return *ftrace_events_; }
  FtraceEventBundle* mutable_ftrace_events() { _has_field_.set(1); return ftrace_events_.get(); }

  bool has_synchronization_marker() const { return _has_field_[36]; }
  const std::string& synchronization_marker() const { return synchronization_marker_; }
  void set_synchronization_marker(const std::string& value) { synchronization_marker_ = value; _has_field_.set(36); }
  void set_synchronization_marker(const void* p, size_t s) { synchronization_marker_.assign(reinterpret_cast<const char*>(p), s); _has_field_.set(36); }

  bool has_compressed_packets() const { return _has_field_[50]; }
  const std::string& compressed_packets() const { return compressed_packets_; }
  void set_compressed_packets(const std::string& value) { compressed_packets_ = value; _has_field_.set(50); }
  void set_compressed_packets(const void* p, size_t s) { compressed_packets_.assign(reinterpret_cast<const char*>(p), s); _has_field_.set(50); }

  bool has_extension_descriptor() const { return _has_field_[72]; }
  const ExtensionDescriptor& extension_descriptor() const { return *extension_descriptor_; }
  ExtensionDescriptor* mutable_extension_descriptor() { _has_field_.set(72); return extension_descriptor_.get(); }

  bool has_network_packet() const { return _has_field_[88]; }
  const NetworkPacketEvent& network_packet() const { return *network_packet_; }
  NetworkPacketEvent* mutable_network_packet() { _has_field_.set(88); return network_packet_.get(); }

  bool has_network_packet_bundle() const { return _has_field_[92]; }
  const NetworkPacketBundle& network_packet_bundle() const { return *network_packet_bundle_; }
  NetworkPacketBundle* mutable_network_packet_bundle() { _has_field_.set(92); return network_packet_bundle_.get(); }

  bool has_track_event_range_of_interest() const { return _has_field_[90]; }
  const TrackEventRangeOfInterest& track_event_range_of_interest() const { return *track_event_range_of_interest_; }
  TrackEventRangeOfInterest* mutable_track_event_range_of_interest() { _has_field_.set(90); return track_event_range_of_interest_.get(); }

  bool has_surfaceflinger_layers_snapshot() const { return _has_field_[93]; }
  const LayersSnapshotProto& surfaceflinger_layers_snapshot() const { return *surfaceflinger_layers_snapshot_; }
  LayersSnapshotProto* mutable_surfaceflinger_layers_snapshot() { _has_field_.set(93); return surfaceflinger_layers_snapshot_.get(); }

  bool has_surfaceflinger_transactions() const { return _has_field_[94]; }
  const TransactionTraceEntry& surfaceflinger_transactions() const { return *surfaceflinger_transactions_; }
  TransactionTraceEntry* mutable_surfaceflinger_transactions() { _has_field_.set(94); return surfaceflinger_transactions_.get(); }

  bool has_shell_transition() const { return _has_field_[96]; }
  const ShellTransition& shell_transition() const { return *shell_transition_; }
  ShellTransition* mutable_shell_transition() { _has_field_.set(96); return shell_transition_.get(); }

  bool has_shell_handler_mappings() const { return _has_field_[97]; }
  const ShellHandlerMappings& shell_handler_mappings() const { return *shell_handler_mappings_; }
  ShellHandlerMappings* mutable_shell_handler_mappings() { _has_field_.set(97); return shell_handler_mappings_.get(); }

  bool has_protolog_message() const { return _has_field_[104]; }
  const ProtoLogMessage& protolog_message() const { return *protolog_message_; }
  ProtoLogMessage* mutable_protolog_message() { _has_field_.set(104); return protolog_message_.get(); }

  bool has_protolog_viewer_config() const { return _has_field_[105]; }
  const ProtoLogViewerConfig& protolog_viewer_config() const { return *protolog_viewer_config_; }
  ProtoLogViewerConfig* mutable_protolog_viewer_config() { _has_field_.set(105); return protolog_viewer_config_.get(); }

  bool has_winscope_extensions() const { return _has_field_[112]; }
  const WinscopeExtensions& winscope_extensions() const { return *winscope_extensions_; }
  WinscopeExtensions* mutable_winscope_extensions() { _has_field_.set(112); return winscope_extensions_.get(); }

  bool has_etw_events() const { return _has_field_[95]; }
  const EtwTraceEventBundle& etw_events() const { return *etw_events_; }
  EtwTraceEventBundle* mutable_etw_events() { _has_field_.set(95); return etw_events_.get(); }

  bool has_v8_js_code() const { return _has_field_[99]; }
  const V8JsCode& v8_js_code() const { return *v8_js_code_; }
  V8JsCode* mutable_v8_js_code() { _has_field_.set(99); return v8_js_code_.get(); }

  bool has_v8_internal_code() const { return _has_field_[100]; }
  const V8InternalCode& v8_internal_code() const { return *v8_internal_code_; }
  V8InternalCode* mutable_v8_internal_code() { _has_field_.set(100); return v8_internal_code_.get(); }

  bool has_v8_wasm_code() const { return _has_field_[101]; }
  const V8WasmCode& v8_wasm_code() const { return *v8_wasm_code_; }
  V8WasmCode* mutable_v8_wasm_code() { _has_field_.set(101); return v8_wasm_code_.get(); }

  bool has_v8_reg_exp_code() const { return _has_field_[102]; }
  const V8RegExpCode& v8_reg_exp_code() const { return *v8_reg_exp_code_; }
  V8RegExpCode* mutable_v8_reg_exp_code() { _has_field_.set(102); return v8_reg_exp_code_.get(); }

  bool has_v8_code_move() const { return _has_field_[103]; }
  const V8CodeMove& v8_code_move() const { return *v8_code_move_; }
  V8CodeMove* mutable_v8_code_move() { _has_field_.set(103); return v8_code_move_.get(); }

  bool has_remote_clock_sync() const { return _has_field_[107]; }
  const RemoteClockSync& remote_clock_sync() const { return *remote_clock_sync_; }
  RemoteClockSync* mutable_remote_clock_sync() { _has_field_.set(107); return remote_clock_sync_.get(); }

  bool has_pixel_modem_events() const { return _has_field_[110]; }
  const PixelModemEvents& pixel_modem_events() const { return *pixel_modem_events_; }
  PixelModemEvents* mutable_pixel_modem_events() { _has_field_.set(110); return pixel_modem_events_.get(); }

  bool has_pixel_modem_token_database() const { return _has_field_[111]; }
  const PixelModemTokenDatabase& pixel_modem_token_database() const { return *pixel_modem_token_database_; }
  PixelModemTokenDatabase* mutable_pixel_modem_token_database() { _has_field_.set(111); return pixel_modem_token_database_.get(); }

  bool has_for_testing() const { return _has_field_[900]; }
  const TestEvent& for_testing() const { return *for_testing_; }
  TestEvent* mutable_for_testing() { _has_field_.set(900); return for_testing_.get(); }

  bool has_trusted_uid() const { return _has_field_[3]; }
  int32_t trusted_uid() const { return trusted_uid_; }
  void set_trusted_uid(int32_t value) { trusted_uid_ = value; _has_field_.set(3); }

  bool has_trusted_packet_sequence_id() const { return _has_field_[10]; }
  uint32_t trusted_packet_sequence_id() const { return trusted_packet_sequence_id_; }
  void set_trusted_packet_sequence_id(uint32_t value) { trusted_packet_sequence_id_ = value; _has_field_.set(10); }

  bool has_trusted_pid() const { return _has_field_[79]; }
  int32_t trusted_pid() const { return trusted_pid_; }
  void set_trusted_pid(int32_t value) { trusted_pid_ = value; _has_field_.set(79); }

  bool has_interned_data() const { return _has_field_[12]; }
  const InternedData& interned_data() const { return *interned_data_; }
  InternedData* mutable_interned_data() { _has_field_.set(12); return interned_data_.get(); }

  bool has_sequence_flags() const { return _has_field_[13]; }
  uint32_t sequence_flags() const { return sequence_flags_; }
  void set_sequence_flags(uint32_t value) { sequence_flags_ = value; _has_field_.set(13); }

  bool has_incremental_state_cleared() const { return _has_field_[41]; }
  bool incremental_state_cleared() const { return incremental_state_cleared_; }
  void set_incremental_state_cleared(bool value) { incremental_state_cleared_ = value; _has_field_.set(41); }

  bool has_trace_packet_defaults() const { return _has_field_[59]; }
  const TracePacketDefaults& trace_packet_defaults() const { return *trace_packet_defaults_; }
  TracePacketDefaults* mutable_trace_packet_defaults() { _has_field_.set(59); return trace_packet_defaults_.get(); }

  bool has_previous_packet_dropped() const { return _has_field_[42]; }
  bool previous_packet_dropped() const { return previous_packet_dropped_; }
  void set_previous_packet_dropped(bool value) { previous_packet_dropped_ = value; _has_field_.set(42); }

  bool has_first_packet_on_sequence() const { return _has_field_[87]; }
  bool first_packet_on_sequence() const { return first_packet_on_sequence_; }
  void set_first_packet_on_sequence(bool value) { first_packet_on_sequence_ = value; _has_field_.set(87); }

  bool has_machine_id() const { return _has_field_[98]; }
  uint32_t machine_id() const { return machine_id_; }
  void set_machine_id(uint32_t value) { machine_id_ = value; _has_field_.set(98); }

 private:
  uint64_t timestamp_{};
  uint32_t timestamp_clock_id_{};
  ::protozero::CopyablePtr<ProcessTree> process_tree_;
  ::protozero::CopyablePtr<ProcessStats> process_stats_;
  ::protozero::CopyablePtr<InodeFileMap> inode_file_map_;
  ::protozero::CopyablePtr<ChromeEventBundle> chrome_events_;
  ::protozero::CopyablePtr<ClockSnapshot> clock_snapshot_;
  ::protozero::CopyablePtr<SysStats> sys_stats_;
  ::protozero::CopyablePtr<TrackEvent> track_event_;
  ::protozero::CopyablePtr<TraceUuid> trace_uuid_;
  ::protozero::CopyablePtr<TraceConfig> trace_config_;
  ::protozero::CopyablePtr<FtraceStats> ftrace_stats_;
  ::protozero::CopyablePtr<TraceStats> trace_stats_;
  ::protozero::CopyablePtr<ProfilePacket> profile_packet_;
  ::protozero::CopyablePtr<StreamingAllocation> streaming_allocation_;
  ::protozero::CopyablePtr<StreamingFree> streaming_free_;
  ::protozero::CopyablePtr<BatteryCounters> battery_;
  ::protozero::CopyablePtr<PowerRails> power_rails_;
  ::protozero::CopyablePtr<AndroidLogPacket> android_log_;
  ::protozero::CopyablePtr<SystemInfo> system_info_;
  ::protozero::CopyablePtr<Trigger> trigger_;
  ::protozero::CopyablePtr<ChromeTrigger> chrome_trigger_;
  ::protozero::CopyablePtr<PackagesList> packages_list_;
  ::protozero::CopyablePtr<ChromeBenchmarkMetadata> chrome_benchmark_metadata_;
  ::protozero::CopyablePtr<PerfettoMetatrace> perfetto_metatrace_;
  ::protozero::CopyablePtr<ChromeMetadataPacket> chrome_metadata_;
  ::protozero::CopyablePtr<GpuCounterEvent> gpu_counter_event_;
  ::protozero::CopyablePtr<GpuRenderStageEvent> gpu_render_stage_event_;
  ::protozero::CopyablePtr<StreamingProfilePacket> streaming_profile_packet_;
  ::protozero::CopyablePtr<HeapGraph> heap_graph_;
  ::protozero::CopyablePtr<GraphicsFrameEvent> graphics_frame_event_;
  ::protozero::CopyablePtr<VulkanMemoryEvent> vulkan_memory_event_;
  ::protozero::CopyablePtr<GpuLog> gpu_log_;
  ::protozero::CopyablePtr<VulkanApiEvent> vulkan_api_event_;
  ::protozero::CopyablePtr<PerfSample> perf_sample_;
  ::protozero::CopyablePtr<CpuInfo> cpu_info_;
  ::protozero::CopyablePtr<SmapsPacket> smaps_packet_;
  ::protozero::CopyablePtr<TracingServiceEvent> service_event_;
  ::protozero::CopyablePtr<InitialDisplayState> initial_display_state_;
  ::protozero::CopyablePtr<GpuMemTotalEvent> gpu_mem_total_event_;
  ::protozero::CopyablePtr<MemoryTrackerSnapshot> memory_tracker_snapshot_;
  ::protozero::CopyablePtr<FrameTimelineEvent> frame_timeline_event_;
  ::protozero::CopyablePtr<AndroidEnergyEstimationBreakdown> android_energy_estimation_breakdown_;
  ::protozero::CopyablePtr<UiState> ui_state_;
  ::protozero::CopyablePtr<AndroidCameraFrameEvent> android_camera_frame_event_;
  ::protozero::CopyablePtr<AndroidCameraSessionStats> android_camera_session_stats_;
  ::protozero::CopyablePtr<TranslationTable> translation_table_;
  ::protozero::CopyablePtr<AndroidGameInterventionList> android_game_intervention_list_;
  ::protozero::CopyablePtr<StatsdAtom> statsd_atom_;
  ::protozero::CopyablePtr<AndroidSystemProperty> android_system_property_;
  ::protozero::CopyablePtr<EntityStateResidency> entity_state_residency_;
  ::protozero::CopyablePtr<ProfiledFrameSymbols> profiled_frame_symbols_;
  ::protozero::CopyablePtr<ModuleSymbols> module_symbols_;
  ::protozero::CopyablePtr<DeobfuscationMapping> deobfuscation_mapping_;
  ::protozero::CopyablePtr<TrackDescriptor> track_descriptor_;
  ::protozero::CopyablePtr<ProcessDescriptor> process_descriptor_;
  ::protozero::CopyablePtr<ThreadDescriptor> thread_descriptor_;
  ::protozero::CopyablePtr<FtraceEventBundle> ftrace_events_;
  std::string synchronization_marker_{};
  std::string compressed_packets_{};
  ::protozero::CopyablePtr<ExtensionDescriptor> extension_descriptor_;
  ::protozero::CopyablePtr<NetworkPacketEvent> network_packet_;
  ::protozero::CopyablePtr<NetworkPacketBundle> network_packet_bundle_;
  ::protozero::CopyablePtr<TrackEventRangeOfInterest> track_event_range_of_interest_;
  ::protozero::CopyablePtr<LayersSnapshotProto> surfaceflinger_layers_snapshot_;
  ::protozero::CopyablePtr<TransactionTraceEntry> surfaceflinger_transactions_;
  ::protozero::CopyablePtr<ShellTransition> shell_transition_;
  ::protozero::CopyablePtr<ShellHandlerMappings> shell_handler_mappings_;
  ::protozero::CopyablePtr<ProtoLogMessage> protolog_message_;
  ::protozero::CopyablePtr<ProtoLogViewerConfig> protolog_viewer_config_;
  ::protozero::CopyablePtr<WinscopeExtensions> winscope_extensions_;
  ::protozero::CopyablePtr<EtwTraceEventBundle> etw_events_;
  ::protozero::CopyablePtr<V8JsCode> v8_js_code_;
  ::protozero::CopyablePtr<V8InternalCode> v8_internal_code_;
  ::protozero::CopyablePtr<V8WasmCode> v8_wasm_code_;
  ::protozero::CopyablePtr<V8RegExpCode> v8_reg_exp_code_;
  ::protozero::CopyablePtr<V8CodeMove> v8_code_move_;
  ::protozero::CopyablePtr<RemoteClockSync> remote_clock_sync_;
  ::protozero::CopyablePtr<PixelModemEvents> pixel_modem_events_;
  ::protozero::CopyablePtr<PixelModemTokenDatabase> pixel_modem_token_database_;
  ::protozero::CopyablePtr<TestEvent> for_testing_;
  int32_t trusted_uid_{};
  uint32_t trusted_packet_sequence_id_{};
  int32_t trusted_pid_{};
  ::protozero::CopyablePtr<InternedData> interned_data_;
  uint32_t sequence_flags_{};
  bool incremental_state_cleared_{};
  ::protozero::CopyablePtr<TracePacketDefaults> trace_packet_defaults_;
  bool previous_packet_dropped_{};
  bool first_packet_on_sequence_{};
  uint32_t machine_id_{};

  // Allows to preserve unknown protobuf fields for compatibility
  // with future versions of .proto files.
  std::string unknown_fields_;

  std::bitset<901> _has_field_{};
};

}  // namespace perfetto
}  // namespace protos
}  // namespace gen

#endif  // PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_TRACE_PACKET_PROTO_CPP_H_
