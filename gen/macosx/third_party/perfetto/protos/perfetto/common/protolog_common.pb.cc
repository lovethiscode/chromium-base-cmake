// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/common/protolog_common.proto

#include "protos/perfetto/common/protolog_common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace perfetto {
namespace protos {
}  // namespace protos
}  // namespace perfetto
namespace perfetto {
namespace protos {
bool ProtoLogLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ProtoLogLevel_strings[7] = {};

static const char ProtoLogLevel_names[] =
  "PROTOLOG_LEVEL_DEBUG"
  "PROTOLOG_LEVEL_ERROR"
  "PROTOLOG_LEVEL_INFO"
  "PROTOLOG_LEVEL_UNDEFINED"
  "PROTOLOG_LEVEL_VERBOSE"
  "PROTOLOG_LEVEL_WARN"
  "PROTOLOG_LEVEL_WTF";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry ProtoLogLevel_entries[] = {
  { {ProtoLogLevel_names + 0, 20}, 1 },
  { {ProtoLogLevel_names + 20, 20}, 5 },
  { {ProtoLogLevel_names + 40, 19}, 3 },
  { {ProtoLogLevel_names + 59, 24}, 0 },
  { {ProtoLogLevel_names + 83, 22}, 2 },
  { {ProtoLogLevel_names + 105, 19}, 4 },
  { {ProtoLogLevel_names + 124, 18}, 6 },
};

static const int ProtoLogLevel_entries_by_number[] = {
  3, // 0 -> PROTOLOG_LEVEL_UNDEFINED
  0, // 1 -> PROTOLOG_LEVEL_DEBUG
  4, // 2 -> PROTOLOG_LEVEL_VERBOSE
  2, // 3 -> PROTOLOG_LEVEL_INFO
  5, // 4 -> PROTOLOG_LEVEL_WARN
  1, // 5 -> PROTOLOG_LEVEL_ERROR
  6, // 6 -> PROTOLOG_LEVEL_WTF
};

const std::string& ProtoLogLevel_Name(
    ProtoLogLevel value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          ProtoLogLevel_entries,
          ProtoLogLevel_entries_by_number,
          7, ProtoLogLevel_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      ProtoLogLevel_entries,
      ProtoLogLevel_entries_by_number,
      7, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     ProtoLogLevel_strings[idx].get();
}
bool ProtoLogLevel_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoLogLevel* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      ProtoLogLevel_entries, 7, name, &int_value);
  if (success) {
    *value = static_cast<ProtoLogLevel>(int_value);
  }
  return success;
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
