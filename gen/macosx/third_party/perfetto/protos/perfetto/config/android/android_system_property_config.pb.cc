// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/android/android_system_property_config.proto

#include "protos/perfetto/config/android/android_system_property_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace perfetto {
namespace protos {
PROTOBUF_CONSTEXPR AndroidSystemPropertyConfig::AndroidSystemPropertyConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.property_name_)*/{}
  , /*decltype(_impl_.poll_ms_)*/0u} {}
struct AndroidSystemPropertyConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AndroidSystemPropertyConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AndroidSystemPropertyConfigDefaultTypeInternal() {}
  union {
    AndroidSystemPropertyConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AndroidSystemPropertyConfigDefaultTypeInternal _AndroidSystemPropertyConfig_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace perfetto {
namespace protos {

// ===================================================================

class AndroidSystemPropertyConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<AndroidSystemPropertyConfig>()._impl_._has_bits_);
  static void set_has_poll_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AndroidSystemPropertyConfig::AndroidSystemPropertyConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.AndroidSystemPropertyConfig)
}
AndroidSystemPropertyConfig::AndroidSystemPropertyConfig(const AndroidSystemPropertyConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite() {
  AndroidSystemPropertyConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.property_name_){from._impl_.property_name_}
    , decltype(_impl_.poll_ms_){}};

  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  _this->_impl_.poll_ms_ = from._impl_.poll_ms_;
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.AndroidSystemPropertyConfig)
}

inline void AndroidSystemPropertyConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.property_name_){arena}
    , decltype(_impl_.poll_ms_){0u}
  };
}

AndroidSystemPropertyConfig::~AndroidSystemPropertyConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.AndroidSystemPropertyConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<std::string>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AndroidSystemPropertyConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.property_name_.~RepeatedPtrField();
}

void AndroidSystemPropertyConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AndroidSystemPropertyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.AndroidSystemPropertyConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.property_name_.Clear();
  _impl_.poll_ms_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* AndroidSystemPropertyConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 poll_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_poll_ms(&has_bits);
          _impl_.poll_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string property_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_property_name();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<std::string>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AndroidSystemPropertyConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.AndroidSystemPropertyConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 poll_ms = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_poll_ms(), target);
  }

  // repeated string property_name = 2;
  for (int i = 0, n = this->_internal_property_name_size(); i < n; i++) {
    const auto& s = this->_internal_property_name(i);
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.AndroidSystemPropertyConfig)
  return target;
}

size_t AndroidSystemPropertyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.AndroidSystemPropertyConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string property_name = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.property_name_.size());
  for (int i = 0, n = _impl_.property_name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.property_name_.Get(i));
  }

  // optional uint32 poll_ms = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_poll_ms());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AndroidSystemPropertyConfig::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const AndroidSystemPropertyConfig*>(
      &from));
}

void AndroidSystemPropertyConfig::MergeFrom(const AndroidSystemPropertyConfig& from) {
  AndroidSystemPropertyConfig* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.AndroidSystemPropertyConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.property_name_.MergeFrom(from._impl_.property_name_);
  if (from._internal_has_poll_ms()) {
    _this->_internal_set_poll_ms(from._internal_poll_ms());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void AndroidSystemPropertyConfig::CopyFrom(const AndroidSystemPropertyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.AndroidSystemPropertyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidSystemPropertyConfig::IsInitialized() const {
  return true;
}

void AndroidSystemPropertyConfig::InternalSwap(AndroidSystemPropertyConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.property_name_.InternalSwap(&other->_impl_.property_name_);
  swap(_impl_.poll_ms_, other->_impl_.poll_ms_);
}

std::string AndroidSystemPropertyConfig::GetTypeName() const {
  return "perfetto.protos.AndroidSystemPropertyConfig";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::AndroidSystemPropertyConfig*
Arena::CreateMaybeMessage< ::perfetto::protos::AndroidSystemPropertyConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::AndroidSystemPropertyConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
