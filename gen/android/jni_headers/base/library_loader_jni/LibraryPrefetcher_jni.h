// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     org.chromium.base.library_loader.LibraryPrefetcher

#ifndef org_chromium_base_library_loader_LibraryPrefetcher_JNI
#define org_chromium_base_library_loader_LibraryPrefetcher_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "../../../../../../third_party/jni_zero/jni_zero_internal.h"
namespace base {
namespace android {
// Java to native functions
// Forward declaration. To be implemented by the including .cc file.
static void JNI_LibraryPrefetcher_ForkAndPrefetchNativeLibrary(JNIEnv* env);

JNI_POSSIBLE_BOUNDARY_EXPORT void Java_org_jni_1zero_GEN_1JNI_org_1chromium_1base_1library_11loader_1LibraryPrefetcher_1forkAndPrefetchNativeLibrary(
    JNIEnv* env,
    jclass jcaller) {
  JNI_LibraryPrefetcher_ForkAndPrefetchNativeLibrary(env);
}

// Forward declaration. To be implemented by the including .cc file.
static jint JNI_LibraryPrefetcher_PercentageOfResidentNativeLibraryCode(
    JNIEnv* env);

JNI_POSSIBLE_BOUNDARY_EXPORT jint Java_org_jni_1zero_GEN_1JNI_org_1chromium_1base_1library_11loader_1LibraryPrefetcher_1percentageOfResidentNativeLibraryCode(
    JNIEnv* env,
    jclass jcaller) {
  auto _ret = JNI_LibraryPrefetcher_PercentageOfResidentNativeLibraryCode(env);
  return _ret;
}

// Forward declaration. To be implemented by the including .cc file.
static void JNI_LibraryPrefetcher_PeriodicallyCollectResidency(JNIEnv* env);

JNI_POSSIBLE_BOUNDARY_EXPORT void Java_org_jni_1zero_GEN_1JNI_org_1chromium_1base_1library_11loader_1LibraryPrefetcher_1periodicallyCollectResidency(
    JNIEnv* env,
    jclass jcaller) {
  JNI_LibraryPrefetcher_PeriodicallyCollectResidency(env);
}


}  // namespace android
}  // namespace base
#endif  // org_chromium_base_library_loader_LibraryPrefetcher_JNI
