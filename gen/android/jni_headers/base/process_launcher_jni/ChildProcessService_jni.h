// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     org.chromium.base.process_launcher.ChildProcessService

#ifndef org_chromium_base_process_launcher_ChildProcessService_JNI
#define org_chromium_base_process_launcher_ChildProcessService_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "../../../../../../third_party/jni_zero/jni_zero_internal.h"
namespace base {
namespace android {
// Java to native functions
// Forward declaration. To be implemented by the including .cc file.
static void JNI_ChildProcessService_DumpProcessStack(JNIEnv* env);

JNI_POSSIBLE_BOUNDARY_EXPORT void Java_org_jni_1zero_GEN_1JNI_org_1chromium_1base_1process_11launcher_1ChildProcessService_1dumpProcessStack(
    JNIEnv* env,
    jclass jcaller) {
  JNI_ChildProcessService_DumpProcessStack(env);
}

// Forward declaration. To be implemented by the including .cc file.
static void JNI_ChildProcessService_ExitChildProcess(JNIEnv* env);

JNI_POSSIBLE_BOUNDARY_EXPORT void Java_org_jni_1zero_GEN_1JNI_org_1chromium_1base_1process_11launcher_1ChildProcessService_1exitChildProcess(
    JNIEnv* env,
    jclass jcaller) {
  JNI_ChildProcessService_ExitChildProcess(env);
}

// Forward declaration. To be implemented by the including .cc file.
static void JNI_ChildProcessService_RegisterFileDescriptors(
    JNIEnv* env,
    const jni_zero::JavaParamRef<jobjectArray>& keys,
    const jni_zero::JavaParamRef<jintArray>& id,
    const jni_zero::JavaParamRef<jintArray>& fd,
    const jni_zero::JavaParamRef<jlongArray>& offset,
    const jni_zero::JavaParamRef<jlongArray>& size);

JNI_POSSIBLE_BOUNDARY_EXPORT void Java_org_jni_1zero_GEN_1JNI_org_1chromium_1base_1process_11launcher_1ChildProcessService_1registerFileDescriptors(
    JNIEnv* env,
    jclass jcaller,
    jobject keys,
    jobject id,
    jobject fd,
    jobject offset,
    jobject size) {
  JNI_ChildProcessService_RegisterFileDescriptors(
      env,
      jni_zero::JavaParamRef<jobjectArray>(env, static_cast<jobjectArray>(keys)),
      jni_zero::JavaParamRef<jintArray>(env, static_cast<jintArray>(id)),
      jni_zero::JavaParamRef<jintArray>(env, static_cast<jintArray>(fd)),
      jni_zero::JavaParamRef<jlongArray>(env, static_cast<jlongArray>(offset)),
      jni_zero::JavaParamRef<jlongArray>(env, static_cast<jlongArray>(size)));
}


}  // namespace android
}  // namespace base
#endif  // org_chromium_base_process_launcher_ChildProcessService_JNI
