// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     org.chromium.base.ContentUriUtils

#ifndef org_chromium_base_ContentUriUtils_JNI
#define org_chromium_base_ContentUriUtils_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "../../../../../../third_party/jni_zero/jni_zero_internal.h"
// Class Accessors.
#ifndef org_chromium_base_ContentUriUtils_clazz_defined
#define org_chromium_base_ContentUriUtils_clazz_defined
inline jclass org_chromium_base_ContentUriUtils_clazz(JNIEnv* env) {
  static const char kClassName[] = "org/chromium/base/ContentUriUtils";
  static std::atomic<jclass> cached_class;
  return jni_zero::internal::LazyGetClass(env, kClassName, &cached_class);
}
#endif

// Native to Java functions
static jboolean Java_ContentUriUtils_contentUriExists(
    JNIEnv* env,
    const jni_zero::JavaRef<jstring>& uriString) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = org_chromium_base_ContentUriUtils_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, false);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "contentUriExists",
      "(Ljava/lang/String;)Z",
      &cached_method_id);
  auto _ret = env->CallStaticBooleanMethod(
      clazz,
      call_context.method_id(),
      uriString.obj());
  return _ret;
}

static jboolean Java_ContentUriUtils_delete(
    JNIEnv* env,
    const jni_zero::JavaRef<jstring>& uriString) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = org_chromium_base_ContentUriUtils_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, false);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "delete",
      "(Ljava/lang/String;)Z",
      &cached_method_id);
  auto _ret = env->CallStaticBooleanMethod(
      clazz,
      call_context.method_id(),
      uriString.obj());
  return _ret;
}

static jni_zero::ScopedJavaLocalRef<jstring> Java_ContentUriUtils_getContentUriFromFilePath(
    JNIEnv* env,
    const jni_zero::JavaRef<jstring>& filePathString) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = org_chromium_base_ContentUriUtils_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "getContentUriFromFilePath",
      "(Ljava/lang/String;)Ljava/lang/String;",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(
      clazz,
      call_context.method_id(),
      filePathString.obj());
  jstring _ret2 = static_cast<jstring>(_ret);
  return jni_zero::ScopedJavaLocalRef<jstring>(env, _ret2);
}

static jni_zero::ScopedJavaLocalRef<jstring> Java_ContentUriUtils_getMimeType(
    JNIEnv* env,
    const jni_zero::JavaRef<jstring>& uriString) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = org_chromium_base_ContentUriUtils_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "getMimeType",
      "(Ljava/lang/String;)Ljava/lang/String;",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(
      clazz,
      call_context.method_id(),
      uriString.obj());
  jstring _ret2 = static_cast<jstring>(_ret);
  return jni_zero::ScopedJavaLocalRef<jstring>(env, _ret2);
}

static jni_zero::ScopedJavaLocalRef<jstring> Java_ContentUriUtils_maybeGetDisplayName(
    JNIEnv* env,
    const jni_zero::JavaRef<jstring>& uriString) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = org_chromium_base_ContentUriUtils_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "maybeGetDisplayName",
      "(Ljava/lang/String;)Ljava/lang/String;",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(
      clazz,
      call_context.method_id(),
      uriString.obj());
  jstring _ret2 = static_cast<jstring>(_ret);
  return jni_zero::ScopedJavaLocalRef<jstring>(env, _ret2);
}

static jint Java_ContentUriUtils_openContentUriForRead(
    JNIEnv* env,
    const jni_zero::JavaRef<jstring>& uriString) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = org_chromium_base_ContentUriUtils_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, 0);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "openContentUriForRead",
      "(Ljava/lang/String;)I",
      &cached_method_id);
  auto _ret = env->CallStaticIntMethod(
      clazz,
      call_context.method_id(),
      uriString.obj());
  return _ret;
}


#endif  // org_chromium_base_ContentUriUtils_JNI
