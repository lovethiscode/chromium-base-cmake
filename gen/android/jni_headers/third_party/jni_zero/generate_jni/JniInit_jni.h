// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     org.jni_zero.JniInit

#ifndef org_jni_zero_JniInit_JNI
#define org_jni_zero_JniInit_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "../../../../../../../third_party/jni_zero/jni_zero_internal.h"
// Class Accessors.
#ifndef org_jni_1zero_JniInit_clazz_defined
#define org_jni_1zero_JniInit_clazz_defined
inline jclass org_jni_1zero_JniInit_clazz(JNIEnv* env) {
  static const char kClassName[] = "org/jni_zero/JniInit";
  static std::atomic<jclass> cached_class;
  return jni_zero::internal::LazyGetClass(env, kClassName, &cached_class);
}
#endif

namespace jni_zero {
// Native to Java functions
static jni_zero::ScopedJavaLocalRef<jobjectArray> Java_JniInit_init(
    JNIEnv* env) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = org_jni_1zero_JniInit_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "init",
      "()[Ljava/lang/Object;",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(clazz, call_context.method_id());
  jobjectArray _ret2 = static_cast<jobjectArray>(_ret);
  return jni_zero::ScopedJavaLocalRef<jobjectArray>(env, _ret2);
}


}  // namespace jni_zero
#endif  // org_jni_zero_JniInit_JNI
