// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/interned_data/interned_data.proto

#include "protos/perfetto/trace/interned_data/interned_data.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace perfetto {
namespace protos {
PROTOBUF_CONSTEXPR InternedData::InternedData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.event_categories_)*/{}
  , /*decltype(_impl_.event_names_)*/{}
  , /*decltype(_impl_.debug_annotation_names_)*/{}
  , /*decltype(_impl_.source_locations_)*/{}
  , /*decltype(_impl_.function_names_)*/{}
  , /*decltype(_impl_.frames_)*/{}
  , /*decltype(_impl_.callstacks_)*/{}
  , /*decltype(_impl_.build_ids_)*/{}
  , /*decltype(_impl_.mapping_paths_)*/{}
  , /*decltype(_impl_.source_paths_)*/{}
  , /*decltype(_impl_.mappings_)*/{}
  , /*decltype(_impl_.log_message_body_)*/{}
  , /*decltype(_impl_.profiled_frame_symbols_)*/{}
  , /*decltype(_impl_.vulkan_memory_keys_)*/{}
  , /*decltype(_impl_.graphics_contexts_)*/{}
  , /*decltype(_impl_.gpu_specifications_)*/{}
  , /*decltype(_impl_.histogram_names_)*/{}
  , /*decltype(_impl_.kernel_symbols_)*/{}
  , /*decltype(_impl_.debug_annotation_value_type_names_)*/{}
  , /*decltype(_impl_.unsymbolized_source_locations_)*/{}
  , /*decltype(_impl_.debug_annotation_string_values_)*/{}
  , /*decltype(_impl_.packet_context_)*/{}
  , /*decltype(_impl_.v8_js_function_name_)*/{}
  , /*decltype(_impl_.v8_js_function_)*/{}
  , /*decltype(_impl_.v8_js_script_)*/{}
  , /*decltype(_impl_.v8_wasm_script_)*/{}
  , /*decltype(_impl_.v8_isolate_)*/{}
  , /*decltype(_impl_.protolog_string_args_)*/{}
  , /*decltype(_impl_.protolog_stacktrace_)*/{}
  , /*decltype(_impl_.viewcapture_package_name_)*/{}
  , /*decltype(_impl_.viewcapture_window_name_)*/{}
  , /*decltype(_impl_.viewcapture_view_id_)*/{}
  , /*decltype(_impl_.viewcapture_class_name_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InternedDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InternedDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InternedDataDefaultTypeInternal() {}
  union {
    InternedData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InternedDataDefaultTypeInternal _InternedData_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace perfetto {
namespace protos {

// ===================================================================

class InternedData::_Internal {
 public:
};

void InternedData::clear_event_categories() {
  _impl_.event_categories_.Clear();
}
void InternedData::clear_event_names() {
  _impl_.event_names_.Clear();
}
void InternedData::clear_debug_annotation_names() {
  _impl_.debug_annotation_names_.Clear();
}
void InternedData::clear_debug_annotation_value_type_names() {
  _impl_.debug_annotation_value_type_names_.Clear();
}
void InternedData::clear_source_locations() {
  _impl_.source_locations_.Clear();
}
void InternedData::clear_unsymbolized_source_locations() {
  _impl_.unsymbolized_source_locations_.Clear();
}
void InternedData::clear_log_message_body() {
  _impl_.log_message_body_.Clear();
}
void InternedData::clear_histogram_names() {
  _impl_.histogram_names_.Clear();
}
void InternedData::clear_build_ids() {
  _impl_.build_ids_.Clear();
}
void InternedData::clear_mapping_paths() {
  _impl_.mapping_paths_.Clear();
}
void InternedData::clear_source_paths() {
  _impl_.source_paths_.Clear();
}
void InternedData::clear_function_names() {
  _impl_.function_names_.Clear();
}
void InternedData::clear_profiled_frame_symbols() {
  _impl_.profiled_frame_symbols_.Clear();
}
void InternedData::clear_mappings() {
  _impl_.mappings_.Clear();
}
void InternedData::clear_frames() {
  _impl_.frames_.Clear();
}
void InternedData::clear_callstacks() {
  _impl_.callstacks_.Clear();
}
void InternedData::clear_vulkan_memory_keys() {
  _impl_.vulkan_memory_keys_.Clear();
}
void InternedData::clear_graphics_contexts() {
  _impl_.graphics_contexts_.Clear();
}
void InternedData::clear_gpu_specifications() {
  _impl_.gpu_specifications_.Clear();
}
void InternedData::clear_kernel_symbols() {
  _impl_.kernel_symbols_.Clear();
}
void InternedData::clear_debug_annotation_string_values() {
  _impl_.debug_annotation_string_values_.Clear();
}
void InternedData::clear_packet_context() {
  _impl_.packet_context_.Clear();
}
void InternedData::clear_v8_js_function_name() {
  _impl_.v8_js_function_name_.Clear();
}
void InternedData::clear_v8_js_function() {
  _impl_.v8_js_function_.Clear();
}
void InternedData::clear_v8_js_script() {
  _impl_.v8_js_script_.Clear();
}
void InternedData::clear_v8_wasm_script() {
  _impl_.v8_wasm_script_.Clear();
}
void InternedData::clear_v8_isolate() {
  _impl_.v8_isolate_.Clear();
}
void InternedData::clear_protolog_string_args() {
  _impl_.protolog_string_args_.Clear();
}
void InternedData::clear_protolog_stacktrace() {
  _impl_.protolog_stacktrace_.Clear();
}
void InternedData::clear_viewcapture_package_name() {
  _impl_.viewcapture_package_name_.Clear();
}
void InternedData::clear_viewcapture_window_name() {
  _impl_.viewcapture_window_name_.Clear();
}
void InternedData::clear_viewcapture_view_id() {
  _impl_.viewcapture_view_id_.Clear();
}
void InternedData::clear_viewcapture_class_name() {
  _impl_.viewcapture_class_name_.Clear();
}
InternedData::InternedData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.InternedData)
}
InternedData::InternedData(const InternedData& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite() {
  InternedData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.event_categories_){from._impl_.event_categories_}
    , decltype(_impl_.event_names_){from._impl_.event_names_}
    , decltype(_impl_.debug_annotation_names_){from._impl_.debug_annotation_names_}
    , decltype(_impl_.source_locations_){from._impl_.source_locations_}
    , decltype(_impl_.function_names_){from._impl_.function_names_}
    , decltype(_impl_.frames_){from._impl_.frames_}
    , decltype(_impl_.callstacks_){from._impl_.callstacks_}
    , decltype(_impl_.build_ids_){from._impl_.build_ids_}
    , decltype(_impl_.mapping_paths_){from._impl_.mapping_paths_}
    , decltype(_impl_.source_paths_){from._impl_.source_paths_}
    , decltype(_impl_.mappings_){from._impl_.mappings_}
    , decltype(_impl_.log_message_body_){from._impl_.log_message_body_}
    , decltype(_impl_.profiled_frame_symbols_){from._impl_.profiled_frame_symbols_}
    , decltype(_impl_.vulkan_memory_keys_){from._impl_.vulkan_memory_keys_}
    , decltype(_impl_.graphics_contexts_){from._impl_.graphics_contexts_}
    , decltype(_impl_.gpu_specifications_){from._impl_.gpu_specifications_}
    , decltype(_impl_.histogram_names_){from._impl_.histogram_names_}
    , decltype(_impl_.kernel_symbols_){from._impl_.kernel_symbols_}
    , decltype(_impl_.debug_annotation_value_type_names_){from._impl_.debug_annotation_value_type_names_}
    , decltype(_impl_.unsymbolized_source_locations_){from._impl_.unsymbolized_source_locations_}
    , decltype(_impl_.debug_annotation_string_values_){from._impl_.debug_annotation_string_values_}
    , decltype(_impl_.packet_context_){from._impl_.packet_context_}
    , decltype(_impl_.v8_js_function_name_){from._impl_.v8_js_function_name_}
    , decltype(_impl_.v8_js_function_){from._impl_.v8_js_function_}
    , decltype(_impl_.v8_js_script_){from._impl_.v8_js_script_}
    , decltype(_impl_.v8_wasm_script_){from._impl_.v8_wasm_script_}
    , decltype(_impl_.v8_isolate_){from._impl_.v8_isolate_}
    , decltype(_impl_.protolog_string_args_){from._impl_.protolog_string_args_}
    , decltype(_impl_.protolog_stacktrace_){from._impl_.protolog_stacktrace_}
    , decltype(_impl_.viewcapture_package_name_){from._impl_.viewcapture_package_name_}
    , decltype(_impl_.viewcapture_window_name_){from._impl_.viewcapture_window_name_}
    , decltype(_impl_.viewcapture_view_id_){from._impl_.viewcapture_view_id_}
    , decltype(_impl_.viewcapture_class_name_){from._impl_.viewcapture_class_name_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.InternedData)
}

inline void InternedData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.event_categories_){arena}
    , decltype(_impl_.event_names_){arena}
    , decltype(_impl_.debug_annotation_names_){arena}
    , decltype(_impl_.source_locations_){arena}
    , decltype(_impl_.function_names_){arena}
    , decltype(_impl_.frames_){arena}
    , decltype(_impl_.callstacks_){arena}
    , decltype(_impl_.build_ids_){arena}
    , decltype(_impl_.mapping_paths_){arena}
    , decltype(_impl_.source_paths_){arena}
    , decltype(_impl_.mappings_){arena}
    , decltype(_impl_.log_message_body_){arena}
    , decltype(_impl_.profiled_frame_symbols_){arena}
    , decltype(_impl_.vulkan_memory_keys_){arena}
    , decltype(_impl_.graphics_contexts_){arena}
    , decltype(_impl_.gpu_specifications_){arena}
    , decltype(_impl_.histogram_names_){arena}
    , decltype(_impl_.kernel_symbols_){arena}
    , decltype(_impl_.debug_annotation_value_type_names_){arena}
    , decltype(_impl_.unsymbolized_source_locations_){arena}
    , decltype(_impl_.debug_annotation_string_values_){arena}
    , decltype(_impl_.packet_context_){arena}
    , decltype(_impl_.v8_js_function_name_){arena}
    , decltype(_impl_.v8_js_function_){arena}
    , decltype(_impl_.v8_js_script_){arena}
    , decltype(_impl_.v8_wasm_script_){arena}
    , decltype(_impl_.v8_isolate_){arena}
    , decltype(_impl_.protolog_string_args_){arena}
    , decltype(_impl_.protolog_stacktrace_){arena}
    , decltype(_impl_.viewcapture_package_name_){arena}
    , decltype(_impl_.viewcapture_window_name_){arena}
    , decltype(_impl_.viewcapture_view_id_){arena}
    , decltype(_impl_.viewcapture_class_name_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InternedData::~InternedData() {
  // @@protoc_insertion_point(destructor:perfetto.protos.InternedData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<std::string>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InternedData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.event_categories_.~RepeatedPtrField();
  _impl_.event_names_.~RepeatedPtrField();
  _impl_.debug_annotation_names_.~RepeatedPtrField();
  _impl_.source_locations_.~RepeatedPtrField();
  _impl_.function_names_.~RepeatedPtrField();
  _impl_.frames_.~RepeatedPtrField();
  _impl_.callstacks_.~RepeatedPtrField();
  _impl_.build_ids_.~RepeatedPtrField();
  _impl_.mapping_paths_.~RepeatedPtrField();
  _impl_.source_paths_.~RepeatedPtrField();
  _impl_.mappings_.~RepeatedPtrField();
  _impl_.log_message_body_.~RepeatedPtrField();
  _impl_.profiled_frame_symbols_.~RepeatedPtrField();
  _impl_.vulkan_memory_keys_.~RepeatedPtrField();
  _impl_.graphics_contexts_.~RepeatedPtrField();
  _impl_.gpu_specifications_.~RepeatedPtrField();
  _impl_.histogram_names_.~RepeatedPtrField();
  _impl_.kernel_symbols_.~RepeatedPtrField();
  _impl_.debug_annotation_value_type_names_.~RepeatedPtrField();
  _impl_.unsymbolized_source_locations_.~RepeatedPtrField();
  _impl_.debug_annotation_string_values_.~RepeatedPtrField();
  _impl_.packet_context_.~RepeatedPtrField();
  _impl_.v8_js_function_name_.~RepeatedPtrField();
  _impl_.v8_js_function_.~RepeatedPtrField();
  _impl_.v8_js_script_.~RepeatedPtrField();
  _impl_.v8_wasm_script_.~RepeatedPtrField();
  _impl_.v8_isolate_.~RepeatedPtrField();
  _impl_.protolog_string_args_.~RepeatedPtrField();
  _impl_.protolog_stacktrace_.~RepeatedPtrField();
  _impl_.viewcapture_package_name_.~RepeatedPtrField();
  _impl_.viewcapture_window_name_.~RepeatedPtrField();
  _impl_.viewcapture_view_id_.~RepeatedPtrField();
  _impl_.viewcapture_class_name_.~RepeatedPtrField();
}

void InternedData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InternedData::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.InternedData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.event_categories_.Clear();
  _impl_.event_names_.Clear();
  _impl_.debug_annotation_names_.Clear();
  _impl_.source_locations_.Clear();
  _impl_.function_names_.Clear();
  _impl_.frames_.Clear();
  _impl_.callstacks_.Clear();
  _impl_.build_ids_.Clear();
  _impl_.mapping_paths_.Clear();
  _impl_.source_paths_.Clear();
  _impl_.mappings_.Clear();
  _impl_.log_message_body_.Clear();
  _impl_.profiled_frame_symbols_.Clear();
  _impl_.vulkan_memory_keys_.Clear();
  _impl_.graphics_contexts_.Clear();
  _impl_.gpu_specifications_.Clear();
  _impl_.histogram_names_.Clear();
  _impl_.kernel_symbols_.Clear();
  _impl_.debug_annotation_value_type_names_.Clear();
  _impl_.unsymbolized_source_locations_.Clear();
  _impl_.debug_annotation_string_values_.Clear();
  _impl_.packet_context_.Clear();
  _impl_.v8_js_function_name_.Clear();
  _impl_.v8_js_function_.Clear();
  _impl_.v8_js_script_.Clear();
  _impl_.v8_wasm_script_.Clear();
  _impl_.v8_isolate_.Clear();
  _impl_.protolog_string_args_.Clear();
  _impl_.protolog_stacktrace_.Clear();
  _impl_.viewcapture_package_name_.Clear();
  _impl_.viewcapture_window_name_.Clear();
  _impl_.viewcapture_view_id_.Clear();
  _impl_.viewcapture_class_name_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* InternedData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .perfetto.protos.EventCategory event_categories = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_event_categories(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.EventName event_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_event_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_debug_annotation_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.SourceLocation source_locations = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_source_locations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString function_names = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_function_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.Frame frames = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_frames(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.Callstack callstacks = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_callstacks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString build_ids = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_build_ids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString mapping_paths = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_mapping_paths(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString source_paths = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_source_paths(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.Mapping mappings = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_mappings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<154>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.LogMessageBody log_message_body = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_log_message_body(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_profiled_frame_symbols(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_vulkan_memory_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_graphics_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_gpu_specifications(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<194>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.HistogramName histogram_names = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_histogram_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<202>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString kernel_symbols = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_kernel_symbols(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<210>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_debug_annotation_value_type_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<218>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_unsymbolized_source_locations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<226>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString debug_annotation_string_values = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_debug_annotation_string_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<234>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.NetworkPacketContext packet_context = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_packet_context(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<242>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedV8String v8_js_function_name = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_v8_js_function_name(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<250>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedV8JsFunction v8_js_function = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_v8_js_function(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<258>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedV8JsScript v8_js_script = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_v8_js_script(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<266>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedV8WasmScript v8_wasm_script = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_v8_wasm_script(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<274>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedV8Isolate v8_isolate = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_v8_isolate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<282>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString protolog_string_args = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_protolog_string_args(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<290>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString protolog_stacktrace = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_protolog_stacktrace(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<298>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString viewcapture_package_name = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_viewcapture_package_name(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<306>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString viewcapture_window_name = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_viewcapture_window_name(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<314>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString viewcapture_view_id = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_viewcapture_view_id(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<322>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString viewcapture_class_name = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_viewcapture_class_name(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<330>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<std::string>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InternedData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.InternedData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .perfetto.protos.EventCategory event_categories = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_event_categories_size()); i < n; i++) {
    const auto& repfield = this->_internal_event_categories(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.EventName event_names = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_event_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_event_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_debug_annotation_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_debug_annotation_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.SourceLocation source_locations = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_source_locations_size()); i < n; i++) {
    const auto& repfield = this->_internal_source_locations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString function_names = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_function_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_function_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.Frame frames = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_frames_size()); i < n; i++) {
    const auto& repfield = this->_internal_frames(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.Callstack callstacks = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_callstacks_size()); i < n; i++) {
    const auto& repfield = this->_internal_callstacks(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString build_ids = 16;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_build_ids_size()); i < n; i++) {
    const auto& repfield = this->_internal_build_ids(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(16, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString mapping_paths = 17;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mapping_paths_size()); i < n; i++) {
    const auto& repfield = this->_internal_mapping_paths(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(17, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString source_paths = 18;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_source_paths_size()); i < n; i++) {
    const auto& repfield = this->_internal_source_paths(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(18, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.Mapping mappings = 19;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mappings_size()); i < n; i++) {
    const auto& repfield = this->_internal_mappings(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(19, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.LogMessageBody log_message_body = 20;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_log_message_body_size()); i < n; i++) {
    const auto& repfield = this->_internal_log_message_body(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(20, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_profiled_frame_symbols_size()); i < n; i++) {
    const auto& repfield = this->_internal_profiled_frame_symbols(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(21, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vulkan_memory_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_vulkan_memory_keys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(22, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_graphics_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_graphics_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(23, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_gpu_specifications_size()); i < n; i++) {
    const auto& repfield = this->_internal_gpu_specifications(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(24, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.HistogramName histogram_names = 25;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_histogram_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_histogram_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(25, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString kernel_symbols = 26;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_kernel_symbols_size()); i < n; i++) {
    const auto& repfield = this->_internal_kernel_symbols(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(26, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_debug_annotation_value_type_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_debug_annotation_value_type_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(27, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_unsymbolized_source_locations_size()); i < n; i++) {
    const auto& repfield = this->_internal_unsymbolized_source_locations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(28, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString debug_annotation_string_values = 29;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_debug_annotation_string_values_size()); i < n; i++) {
    const auto& repfield = this->_internal_debug_annotation_string_values(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(29, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.NetworkPacketContext packet_context = 30;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_packet_context_size()); i < n; i++) {
    const auto& repfield = this->_internal_packet_context(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(30, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedV8String v8_js_function_name = 31;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_v8_js_function_name_size()); i < n; i++) {
    const auto& repfield = this->_internal_v8_js_function_name(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(31, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedV8JsFunction v8_js_function = 32;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_v8_js_function_size()); i < n; i++) {
    const auto& repfield = this->_internal_v8_js_function(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(32, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedV8JsScript v8_js_script = 33;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_v8_js_script_size()); i < n; i++) {
    const auto& repfield = this->_internal_v8_js_script(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(33, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedV8WasmScript v8_wasm_script = 34;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_v8_wasm_script_size()); i < n; i++) {
    const auto& repfield = this->_internal_v8_wasm_script(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(34, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedV8Isolate v8_isolate = 35;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_v8_isolate_size()); i < n; i++) {
    const auto& repfield = this->_internal_v8_isolate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(35, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString protolog_string_args = 36;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_protolog_string_args_size()); i < n; i++) {
    const auto& repfield = this->_internal_protolog_string_args(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(36, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString protolog_stacktrace = 37;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_protolog_stacktrace_size()); i < n; i++) {
    const auto& repfield = this->_internal_protolog_stacktrace(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(37, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString viewcapture_package_name = 38;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_viewcapture_package_name_size()); i < n; i++) {
    const auto& repfield = this->_internal_viewcapture_package_name(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(38, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString viewcapture_window_name = 39;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_viewcapture_window_name_size()); i < n; i++) {
    const auto& repfield = this->_internal_viewcapture_window_name(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(39, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString viewcapture_view_id = 40;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_viewcapture_view_id_size()); i < n; i++) {
    const auto& repfield = this->_internal_viewcapture_view_id(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(40, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString viewcapture_class_name = 41;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_viewcapture_class_name_size()); i < n; i++) {
    const auto& repfield = this->_internal_viewcapture_class_name(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(41, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.InternedData)
  return target;
}

size_t InternedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.InternedData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.EventCategory event_categories = 1;
  total_size += 1UL * this->_internal_event_categories_size();
  for (const auto& msg : this->_impl_.event_categories_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.EventName event_names = 2;
  total_size += 1UL * this->_internal_event_names_size();
  for (const auto& msg : this->_impl_.event_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;
  total_size += 1UL * this->_internal_debug_annotation_names_size();
  for (const auto& msg : this->_impl_.debug_annotation_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.SourceLocation source_locations = 4;
  total_size += 1UL * this->_internal_source_locations_size();
  for (const auto& msg : this->_impl_.source_locations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString function_names = 5;
  total_size += 1UL * this->_internal_function_names_size();
  for (const auto& msg : this->_impl_.function_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.Frame frames = 6;
  total_size += 1UL * this->_internal_frames_size();
  for (const auto& msg : this->_impl_.frames_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.Callstack callstacks = 7;
  total_size += 1UL * this->_internal_callstacks_size();
  for (const auto& msg : this->_impl_.callstacks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString build_ids = 16;
  total_size += 2UL * this->_internal_build_ids_size();
  for (const auto& msg : this->_impl_.build_ids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString mapping_paths = 17;
  total_size += 2UL * this->_internal_mapping_paths_size();
  for (const auto& msg : this->_impl_.mapping_paths_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString source_paths = 18;
  total_size += 2UL * this->_internal_source_paths_size();
  for (const auto& msg : this->_impl_.source_paths_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.Mapping mappings = 19;
  total_size += 2UL * this->_internal_mappings_size();
  for (const auto& msg : this->_impl_.mappings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.LogMessageBody log_message_body = 20;
  total_size += 2UL * this->_internal_log_message_body_size();
  for (const auto& msg : this->_impl_.log_message_body_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;
  total_size += 2UL * this->_internal_profiled_frame_symbols_size();
  for (const auto& msg : this->_impl_.profiled_frame_symbols_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;
  total_size += 2UL * this->_internal_vulkan_memory_keys_size();
  for (const auto& msg : this->_impl_.vulkan_memory_keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;
  total_size += 2UL * this->_internal_graphics_contexts_size();
  for (const auto& msg : this->_impl_.graphics_contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;
  total_size += 2UL * this->_internal_gpu_specifications_size();
  for (const auto& msg : this->_impl_.gpu_specifications_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.HistogramName histogram_names = 25;
  total_size += 2UL * this->_internal_histogram_names_size();
  for (const auto& msg : this->_impl_.histogram_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString kernel_symbols = 26;
  total_size += 2UL * this->_internal_kernel_symbols_size();
  for (const auto& msg : this->_impl_.kernel_symbols_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;
  total_size += 2UL * this->_internal_debug_annotation_value_type_names_size();
  for (const auto& msg : this->_impl_.debug_annotation_value_type_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;
  total_size += 2UL * this->_internal_unsymbolized_source_locations_size();
  for (const auto& msg : this->_impl_.unsymbolized_source_locations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString debug_annotation_string_values = 29;
  total_size += 2UL * this->_internal_debug_annotation_string_values_size();
  for (const auto& msg : this->_impl_.debug_annotation_string_values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.NetworkPacketContext packet_context = 30;
  total_size += 2UL * this->_internal_packet_context_size();
  for (const auto& msg : this->_impl_.packet_context_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedV8String v8_js_function_name = 31;
  total_size += 2UL * this->_internal_v8_js_function_name_size();
  for (const auto& msg : this->_impl_.v8_js_function_name_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedV8JsFunction v8_js_function = 32;
  total_size += 2UL * this->_internal_v8_js_function_size();
  for (const auto& msg : this->_impl_.v8_js_function_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedV8JsScript v8_js_script = 33;
  total_size += 2UL * this->_internal_v8_js_script_size();
  for (const auto& msg : this->_impl_.v8_js_script_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedV8WasmScript v8_wasm_script = 34;
  total_size += 2UL * this->_internal_v8_wasm_script_size();
  for (const auto& msg : this->_impl_.v8_wasm_script_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedV8Isolate v8_isolate = 35;
  total_size += 2UL * this->_internal_v8_isolate_size();
  for (const auto& msg : this->_impl_.v8_isolate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString protolog_string_args = 36;
  total_size += 2UL * this->_internal_protolog_string_args_size();
  for (const auto& msg : this->_impl_.protolog_string_args_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString protolog_stacktrace = 37;
  total_size += 2UL * this->_internal_protolog_stacktrace_size();
  for (const auto& msg : this->_impl_.protolog_stacktrace_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString viewcapture_package_name = 38;
  total_size += 2UL * this->_internal_viewcapture_package_name_size();
  for (const auto& msg : this->_impl_.viewcapture_package_name_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString viewcapture_window_name = 39;
  total_size += 2UL * this->_internal_viewcapture_window_name_size();
  for (const auto& msg : this->_impl_.viewcapture_window_name_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString viewcapture_view_id = 40;
  total_size += 2UL * this->_internal_viewcapture_view_id_size();
  for (const auto& msg : this->_impl_.viewcapture_view_id_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString viewcapture_class_name = 41;
  total_size += 2UL * this->_internal_viewcapture_class_name_size();
  for (const auto& msg : this->_impl_.viewcapture_class_name_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InternedData::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const InternedData*>(
      &from));
}

void InternedData::MergeFrom(const InternedData& from) {
  InternedData* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.InternedData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.event_categories_.MergeFrom(from._impl_.event_categories_);
  _this->_impl_.event_names_.MergeFrom(from._impl_.event_names_);
  _this->_impl_.debug_annotation_names_.MergeFrom(from._impl_.debug_annotation_names_);
  _this->_impl_.source_locations_.MergeFrom(from._impl_.source_locations_);
  _this->_impl_.function_names_.MergeFrom(from._impl_.function_names_);
  _this->_impl_.frames_.MergeFrom(from._impl_.frames_);
  _this->_impl_.callstacks_.MergeFrom(from._impl_.callstacks_);
  _this->_impl_.build_ids_.MergeFrom(from._impl_.build_ids_);
  _this->_impl_.mapping_paths_.MergeFrom(from._impl_.mapping_paths_);
  _this->_impl_.source_paths_.MergeFrom(from._impl_.source_paths_);
  _this->_impl_.mappings_.MergeFrom(from._impl_.mappings_);
  _this->_impl_.log_message_body_.MergeFrom(from._impl_.log_message_body_);
  _this->_impl_.profiled_frame_symbols_.MergeFrom(from._impl_.profiled_frame_symbols_);
  _this->_impl_.vulkan_memory_keys_.MergeFrom(from._impl_.vulkan_memory_keys_);
  _this->_impl_.graphics_contexts_.MergeFrom(from._impl_.graphics_contexts_);
  _this->_impl_.gpu_specifications_.MergeFrom(from._impl_.gpu_specifications_);
  _this->_impl_.histogram_names_.MergeFrom(from._impl_.histogram_names_);
  _this->_impl_.kernel_symbols_.MergeFrom(from._impl_.kernel_symbols_);
  _this->_impl_.debug_annotation_value_type_names_.MergeFrom(from._impl_.debug_annotation_value_type_names_);
  _this->_impl_.unsymbolized_source_locations_.MergeFrom(from._impl_.unsymbolized_source_locations_);
  _this->_impl_.debug_annotation_string_values_.MergeFrom(from._impl_.debug_annotation_string_values_);
  _this->_impl_.packet_context_.MergeFrom(from._impl_.packet_context_);
  _this->_impl_.v8_js_function_name_.MergeFrom(from._impl_.v8_js_function_name_);
  _this->_impl_.v8_js_function_.MergeFrom(from._impl_.v8_js_function_);
  _this->_impl_.v8_js_script_.MergeFrom(from._impl_.v8_js_script_);
  _this->_impl_.v8_wasm_script_.MergeFrom(from._impl_.v8_wasm_script_);
  _this->_impl_.v8_isolate_.MergeFrom(from._impl_.v8_isolate_);
  _this->_impl_.protolog_string_args_.MergeFrom(from._impl_.protolog_string_args_);
  _this->_impl_.protolog_stacktrace_.MergeFrom(from._impl_.protolog_stacktrace_);
  _this->_impl_.viewcapture_package_name_.MergeFrom(from._impl_.viewcapture_package_name_);
  _this->_impl_.viewcapture_window_name_.MergeFrom(from._impl_.viewcapture_window_name_);
  _this->_impl_.viewcapture_view_id_.MergeFrom(from._impl_.viewcapture_view_id_);
  _this->_impl_.viewcapture_class_name_.MergeFrom(from._impl_.viewcapture_class_name_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void InternedData::CopyFrom(const InternedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.InternedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternedData::IsInitialized() const {
  return true;
}

void InternedData::InternalSwap(InternedData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.event_categories_.InternalSwap(&other->_impl_.event_categories_);
  _impl_.event_names_.InternalSwap(&other->_impl_.event_names_);
  _impl_.debug_annotation_names_.InternalSwap(&other->_impl_.debug_annotation_names_);
  _impl_.source_locations_.InternalSwap(&other->_impl_.source_locations_);
  _impl_.function_names_.InternalSwap(&other->_impl_.function_names_);
  _impl_.frames_.InternalSwap(&other->_impl_.frames_);
  _impl_.callstacks_.InternalSwap(&other->_impl_.callstacks_);
  _impl_.build_ids_.InternalSwap(&other->_impl_.build_ids_);
  _impl_.mapping_paths_.InternalSwap(&other->_impl_.mapping_paths_);
  _impl_.source_paths_.InternalSwap(&other->_impl_.source_paths_);
  _impl_.mappings_.InternalSwap(&other->_impl_.mappings_);
  _impl_.log_message_body_.InternalSwap(&other->_impl_.log_message_body_);
  _impl_.profiled_frame_symbols_.InternalSwap(&other->_impl_.profiled_frame_symbols_);
  _impl_.vulkan_memory_keys_.InternalSwap(&other->_impl_.vulkan_memory_keys_);
  _impl_.graphics_contexts_.InternalSwap(&other->_impl_.graphics_contexts_);
  _impl_.gpu_specifications_.InternalSwap(&other->_impl_.gpu_specifications_);
  _impl_.histogram_names_.InternalSwap(&other->_impl_.histogram_names_);
  _impl_.kernel_symbols_.InternalSwap(&other->_impl_.kernel_symbols_);
  _impl_.debug_annotation_value_type_names_.InternalSwap(&other->_impl_.debug_annotation_value_type_names_);
  _impl_.unsymbolized_source_locations_.InternalSwap(&other->_impl_.unsymbolized_source_locations_);
  _impl_.debug_annotation_string_values_.InternalSwap(&other->_impl_.debug_annotation_string_values_);
  _impl_.packet_context_.InternalSwap(&other->_impl_.packet_context_);
  _impl_.v8_js_function_name_.InternalSwap(&other->_impl_.v8_js_function_name_);
  _impl_.v8_js_function_.InternalSwap(&other->_impl_.v8_js_function_);
  _impl_.v8_js_script_.InternalSwap(&other->_impl_.v8_js_script_);
  _impl_.v8_wasm_script_.InternalSwap(&other->_impl_.v8_wasm_script_);
  _impl_.v8_isolate_.InternalSwap(&other->_impl_.v8_isolate_);
  _impl_.protolog_string_args_.InternalSwap(&other->_impl_.protolog_string_args_);
  _impl_.protolog_stacktrace_.InternalSwap(&other->_impl_.protolog_stacktrace_);
  _impl_.viewcapture_package_name_.InternalSwap(&other->_impl_.viewcapture_package_name_);
  _impl_.viewcapture_window_name_.InternalSwap(&other->_impl_.viewcapture_window_name_);
  _impl_.viewcapture_view_id_.InternalSwap(&other->_impl_.viewcapture_view_id_);
  _impl_.viewcapture_class_name_.InternalSwap(&other->_impl_.viewcapture_class_name_);
}

std::string InternedData::GetTypeName() const {
  return "perfetto.protos.InternedData";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::InternedData*
Arena::CreateMaybeMessage< ::perfetto::protos::InternedData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::InternedData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
