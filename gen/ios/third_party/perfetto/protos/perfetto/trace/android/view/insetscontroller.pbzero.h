// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_VIEW_INSETSCONTROLLER_PROTO_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_VIEW_INSETSCONTROLLER_PROTO_H_

#include <stddef.h>
#include <stdint.h>

#include "perfetto/protozero/field_writer.h"
#include "perfetto/protozero/message.h"
#include "perfetto/protozero/packed_repeated_fields.h"
#include "perfetto/protozero/proto_decoder.h"
#include "perfetto/protozero/proto_utils.h"

namespace perfetto {
namespace protos {
namespace pbzero {
class InsetsAnimationControlImplProto;
class InsetsStateProto;
} // Namespace pbzero.
} // Namespace protos.
} // Namespace perfetto.

namespace perfetto {
namespace protos {
namespace pbzero {

class InsetsControllerProto_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/2, /*HAS_NONPACKED_REPEATED_FIELDS=*/true> {
 public:
  InsetsControllerProto_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit InsetsControllerProto_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit InsetsControllerProto_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_state() const { return at<1>().valid(); }
  ::protozero::ConstBytes state() const { return at<1>().as_bytes(); }
  bool has_control() const { return at<2>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstBytes> control() const { return GetRepeated<::protozero::ConstBytes>(2); }
};

class InsetsControllerProto : public ::protozero::Message {
 public:
  using Decoder = InsetsControllerProto_Decoder;
  enum : int32_t {
    kStateFieldNumber = 1,
    kControlFieldNumber = 2,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.InsetsControllerProto"; }


  using FieldMetadata_State =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      InsetsStateProto,
      InsetsControllerProto>;

  static constexpr FieldMetadata_State kState{};
  template <typename T = InsetsStateProto> T* set_state() {
    return BeginNestedMessage<T>(1);
  }


  using FieldMetadata_Control =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      InsetsAnimationControlImplProto,
      InsetsControllerProto>;

  static constexpr FieldMetadata_Control kControl{};
  template <typename T = InsetsAnimationControlImplProto> T* add_control() {
    return BeginNestedMessage<T>(2);
  }

};

} // Namespace.
} // Namespace.
} // Namespace.
#endif  // Include guard.
