// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_VIEW_WINDOWLAYOUTPARAMS_PROTO_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_VIEW_WINDOWLAYOUTPARAMS_PROTO_H_

#include <stddef.h>
#include <stdint.h>

#include "perfetto/protozero/field_writer.h"
#include "perfetto/protozero/message.h"
#include "perfetto/protozero/packed_repeated_fields.h"
#include "perfetto/protozero/proto_decoder.h"
#include "perfetto/protozero/proto_utils.h"

namespace perfetto {
namespace protos {
namespace pbzero {
namespace perfetto_pbzero_enum_PixelFormatProto {
enum Format : int32_t;
}  // namespace perfetto_pbzero_enum_PixelFormatProto
using PixelFormatProto_Format = perfetto_pbzero_enum_PixelFormatProto::Format;
namespace perfetto_pbzero_enum_ViewDisplayProto {
enum ColorMode : int32_t;
}  // namespace perfetto_pbzero_enum_ViewDisplayProto
using ViewDisplayProto_ColorMode = perfetto_pbzero_enum_ViewDisplayProto::ColorMode;
namespace perfetto_pbzero_enum_WindowLayoutParamsProto {
enum RotationAnimation : int32_t;
}  // namespace perfetto_pbzero_enum_WindowLayoutParamsProto
using WindowLayoutParamsProto_RotationAnimation = perfetto_pbzero_enum_WindowLayoutParamsProto::RotationAnimation;
} // Namespace pbzero.
} // Namespace protos.
} // Namespace perfetto.

namespace perfetto {
namespace protos {
namespace pbzero {

namespace perfetto_pbzero_enum_WindowLayoutParamsProto {
enum RotationAnimation : int32_t {
  ROTATION_ANIMATION_UNSPECIFIED = -1,
  ROTATION_ANIMATION_CROSSFADE = 1,
  ROTATION_ANIMATION_JUMPCUT = 2,
  ROTATION_ANIMATION_SEAMLESS = 3,
};
} // namespace perfetto_pbzero_enum_WindowLayoutParamsProto
using WindowLayoutParamsProto_RotationAnimation = perfetto_pbzero_enum_WindowLayoutParamsProto::RotationAnimation;


constexpr WindowLayoutParamsProto_RotationAnimation WindowLayoutParamsProto_RotationAnimation_MIN = WindowLayoutParamsProto_RotationAnimation::ROTATION_ANIMATION_UNSPECIFIED;
constexpr WindowLayoutParamsProto_RotationAnimation WindowLayoutParamsProto_RotationAnimation_MAX = WindowLayoutParamsProto_RotationAnimation::ROTATION_ANIMATION_SEAMLESS;


PERFETTO_PROTOZERO_CONSTEXPR14_OR_INLINE
const char* WindowLayoutParamsProto_RotationAnimation_Name(::perfetto::protos::pbzero::WindowLayoutParamsProto_RotationAnimation value) {
  switch (value) {
  case ::perfetto::protos::pbzero::WindowLayoutParamsProto_RotationAnimation::ROTATION_ANIMATION_UNSPECIFIED:
    return "ROTATION_ANIMATION_UNSPECIFIED";

  case ::perfetto::protos::pbzero::WindowLayoutParamsProto_RotationAnimation::ROTATION_ANIMATION_CROSSFADE:
    return "ROTATION_ANIMATION_CROSSFADE";

  case ::perfetto::protos::pbzero::WindowLayoutParamsProto_RotationAnimation::ROTATION_ANIMATION_JUMPCUT:
    return "ROTATION_ANIMATION_JUMPCUT";

  case ::perfetto::protos::pbzero::WindowLayoutParamsProto_RotationAnimation::ROTATION_ANIMATION_SEAMLESS:
    return "ROTATION_ANIMATION_SEAMLESS";
  }
  return "PBZERO_UNKNOWN_ENUM_VALUE";
}

class WindowLayoutParamsProto_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/33, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  WindowLayoutParamsProto_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit WindowLayoutParamsProto_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit WindowLayoutParamsProto_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_type() const { return at<1>().valid(); }
  int32_t type() const { return at<1>().as_int32(); }
  bool has_x() const { return at<2>().valid(); }
  int32_t x() const { return at<2>().as_int32(); }
  bool has_y() const { return at<3>().valid(); }
  int32_t y() const { return at<3>().as_int32(); }
  bool has_width() const { return at<4>().valid(); }
  int32_t width() const { return at<4>().as_int32(); }
  bool has_height() const { return at<5>().valid(); }
  int32_t height() const { return at<5>().as_int32(); }
  bool has_horizontal_margin() const { return at<6>().valid(); }
  float horizontal_margin() const { return at<6>().as_float(); }
  bool has_vertical_margin() const { return at<7>().valid(); }
  float vertical_margin() const { return at<7>().as_float(); }
  bool has_gravity() const { return at<8>().valid(); }
  int32_t gravity() const { return at<8>().as_int32(); }
  bool has_soft_input_mode() const { return at<9>().valid(); }
  int32_t soft_input_mode() const { return at<9>().as_int32(); }
  bool has_format() const { return at<10>().valid(); }
  int32_t format() const { return at<10>().as_int32(); }
  bool has_window_animations() const { return at<11>().valid(); }
  int32_t window_animations() const { return at<11>().as_int32(); }
  bool has_alpha() const { return at<12>().valid(); }
  float alpha() const { return at<12>().as_float(); }
  bool has_screen_brightness() const { return at<13>().valid(); }
  float screen_brightness() const { return at<13>().as_float(); }
  bool has_button_brightness() const { return at<14>().valid(); }
  float button_brightness() const { return at<14>().as_float(); }
  bool has_rotation_animation() const { return at<15>().valid(); }
  int32_t rotation_animation() const { return at<15>().as_int32(); }
  bool has_preferred_refresh_rate() const { return at<16>().valid(); }
  float preferred_refresh_rate() const { return at<16>().as_float(); }
  bool has_preferred_display_mode_id() const { return at<17>().valid(); }
  int32_t preferred_display_mode_id() const { return at<17>().as_int32(); }
  bool has_has_system_ui_listeners() const { return at<18>().valid(); }
  bool has_system_ui_listeners() const { return at<18>().as_bool(); }
  bool has_input_feature_flags() const { return at<19>().valid(); }
  uint32_t input_feature_flags() const { return at<19>().as_uint32(); }
  bool has_user_activity_timeout() const { return at<20>().valid(); }
  int64_t user_activity_timeout() const { return at<20>().as_int64(); }
  bool has_color_mode() const { return at<23>().valid(); }
  int32_t color_mode() const { return at<23>().as_int32(); }
  bool has_flags() const { return at<24>().valid(); }
  uint32_t flags() const { return at<24>().as_uint32(); }
  bool has_private_flags() const { return at<26>().valid(); }
  uint32_t private_flags() const { return at<26>().as_uint32(); }
  bool has_system_ui_visibility_flags() const { return at<27>().valid(); }
  uint32_t system_ui_visibility_flags() const { return at<27>().as_uint32(); }
  bool has_subtree_system_ui_visibility_flags() const { return at<28>().valid(); }
  uint32_t subtree_system_ui_visibility_flags() const { return at<28>().as_uint32(); }
  bool has_appearance() const { return at<29>().valid(); }
  uint32_t appearance() const { return at<29>().as_uint32(); }
  bool has_behavior() const { return at<30>().valid(); }
  uint32_t behavior() const { return at<30>().as_uint32(); }
  bool has_fit_insets_types() const { return at<31>().valid(); }
  uint32_t fit_insets_types() const { return at<31>().as_uint32(); }
  bool has_fit_insets_sides() const { return at<32>().valid(); }
  uint32_t fit_insets_sides() const { return at<32>().as_uint32(); }
  bool has_fit_ignore_visibility() const { return at<33>().valid(); }
  bool fit_ignore_visibility() const { return at<33>().as_bool(); }
};

class WindowLayoutParamsProto : public ::protozero::Message {
 public:
  using Decoder = WindowLayoutParamsProto_Decoder;
  enum : int32_t {
    kTypeFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kWidthFieldNumber = 4,
    kHeightFieldNumber = 5,
    kHorizontalMarginFieldNumber = 6,
    kVerticalMarginFieldNumber = 7,
    kGravityFieldNumber = 8,
    kSoftInputModeFieldNumber = 9,
    kFormatFieldNumber = 10,
    kWindowAnimationsFieldNumber = 11,
    kAlphaFieldNumber = 12,
    kScreenBrightnessFieldNumber = 13,
    kButtonBrightnessFieldNumber = 14,
    kRotationAnimationFieldNumber = 15,
    kPreferredRefreshRateFieldNumber = 16,
    kPreferredDisplayModeIdFieldNumber = 17,
    kHasSystemUiListenersFieldNumber = 18,
    kInputFeatureFlagsFieldNumber = 19,
    kUserActivityTimeoutFieldNumber = 20,
    kColorModeFieldNumber = 23,
    kFlagsFieldNumber = 24,
    kPrivateFlagsFieldNumber = 26,
    kSystemUiVisibilityFlagsFieldNumber = 27,
    kSubtreeSystemUiVisibilityFlagsFieldNumber = 28,
    kAppearanceFieldNumber = 29,
    kBehaviorFieldNumber = 30,
    kFitInsetsTypesFieldNumber = 31,
    kFitInsetsSidesFieldNumber = 32,
    kFitIgnoreVisibilityFieldNumber = 33,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.WindowLayoutParamsProto"; }


  using RotationAnimation = ::perfetto::protos::pbzero::WindowLayoutParamsProto_RotationAnimation;
  static inline const char* RotationAnimation_Name(RotationAnimation value) {
    return ::perfetto::protos::pbzero::WindowLayoutParamsProto_RotationAnimation_Name(value);
  }
  static inline const RotationAnimation ROTATION_ANIMATION_UNSPECIFIED = RotationAnimation::ROTATION_ANIMATION_UNSPECIFIED;
  static inline const RotationAnimation ROTATION_ANIMATION_CROSSFADE = RotationAnimation::ROTATION_ANIMATION_CROSSFADE;
  static inline const RotationAnimation ROTATION_ANIMATION_JUMPCUT = RotationAnimation::ROTATION_ANIMATION_JUMPCUT;
  static inline const RotationAnimation ROTATION_ANIMATION_SEAMLESS = RotationAnimation::ROTATION_ANIMATION_SEAMLESS;

  using FieldMetadata_Type =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_Type kType{};
  void set_type(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Type::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_X =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_X kX{};
  void set_x(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_X::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Y =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_Y kY{};
  void set_y(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Y::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Width =
    ::protozero::proto_utils::FieldMetadata<
      4,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_Width kWidth{};
  void set_width(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Width::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Height =
    ::protozero::proto_utils::FieldMetadata<
      5,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_Height kHeight{};
  void set_height(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Height::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_HorizontalMargin =
    ::protozero::proto_utils::FieldMetadata<
      6,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_HorizontalMargin kHorizontalMargin{};
  void set_horizontal_margin(float value) {
    static constexpr uint32_t field_id = FieldMetadata_HorizontalMargin::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_VerticalMargin =
    ::protozero::proto_utils::FieldMetadata<
      7,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_VerticalMargin kVerticalMargin{};
  void set_vertical_margin(float value) {
    static constexpr uint32_t field_id = FieldMetadata_VerticalMargin::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Gravity =
    ::protozero::proto_utils::FieldMetadata<
      8,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_Gravity kGravity{};
  void set_gravity(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Gravity::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_SoftInputMode =
    ::protozero::proto_utils::FieldMetadata<
      9,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_SoftInputMode kSoftInputMode{};
  void set_soft_input_mode(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_SoftInputMode::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Format =
    ::protozero::proto_utils::FieldMetadata<
      10,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kEnum,
      PixelFormatProto_Format,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_Format kFormat{};
  void set_format(PixelFormatProto_Format value) {
    static constexpr uint32_t field_id = FieldMetadata_Format::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kEnum>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_WindowAnimations =
    ::protozero::proto_utils::FieldMetadata<
      11,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_WindowAnimations kWindowAnimations{};
  void set_window_animations(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_WindowAnimations::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Alpha =
    ::protozero::proto_utils::FieldMetadata<
      12,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_Alpha kAlpha{};
  void set_alpha(float value) {
    static constexpr uint32_t field_id = FieldMetadata_Alpha::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ScreenBrightness =
    ::protozero::proto_utils::FieldMetadata<
      13,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_ScreenBrightness kScreenBrightness{};
  void set_screen_brightness(float value) {
    static constexpr uint32_t field_id = FieldMetadata_ScreenBrightness::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ButtonBrightness =
    ::protozero::proto_utils::FieldMetadata<
      14,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_ButtonBrightness kButtonBrightness{};
  void set_button_brightness(float value) {
    static constexpr uint32_t field_id = FieldMetadata_ButtonBrightness::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_RotationAnimation =
    ::protozero::proto_utils::FieldMetadata<
      15,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kEnum,
      WindowLayoutParamsProto_RotationAnimation,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_RotationAnimation kRotationAnimation{};
  void set_rotation_animation(WindowLayoutParamsProto_RotationAnimation value) {
    static constexpr uint32_t field_id = FieldMetadata_RotationAnimation::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kEnum>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_PreferredRefreshRate =
    ::protozero::proto_utils::FieldMetadata<
      16,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_PreferredRefreshRate kPreferredRefreshRate{};
  void set_preferred_refresh_rate(float value) {
    static constexpr uint32_t field_id = FieldMetadata_PreferredRefreshRate::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_PreferredDisplayModeId =
    ::protozero::proto_utils::FieldMetadata<
      17,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_PreferredDisplayModeId kPreferredDisplayModeId{};
  void set_preferred_display_mode_id(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_PreferredDisplayModeId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_HasSystemUiListeners =
    ::protozero::proto_utils::FieldMetadata<
      18,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kBool,
      bool,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_HasSystemUiListeners kHasSystemUiListeners{};
  void set_has_system_ui_listeners(bool value) {
    static constexpr uint32_t field_id = FieldMetadata_HasSystemUiListeners::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kBool>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_InputFeatureFlags =
    ::protozero::proto_utils::FieldMetadata<
      19,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_InputFeatureFlags kInputFeatureFlags{};
  void set_input_feature_flags(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_InputFeatureFlags::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_UserActivityTimeout =
    ::protozero::proto_utils::FieldMetadata<
      20,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt64,
      int64_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_UserActivityTimeout kUserActivityTimeout{};
  void set_user_activity_timeout(int64_t value) {
    static constexpr uint32_t field_id = FieldMetadata_UserActivityTimeout::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt64>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ColorMode =
    ::protozero::proto_utils::FieldMetadata<
      23,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kEnum,
      ViewDisplayProto_ColorMode,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_ColorMode kColorMode{};
  void set_color_mode(ViewDisplayProto_ColorMode value) {
    static constexpr uint32_t field_id = FieldMetadata_ColorMode::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kEnum>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Flags =
    ::protozero::proto_utils::FieldMetadata<
      24,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_Flags kFlags{};
  void set_flags(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Flags::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_PrivateFlags =
    ::protozero::proto_utils::FieldMetadata<
      26,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_PrivateFlags kPrivateFlags{};
  void set_private_flags(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_PrivateFlags::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_SystemUiVisibilityFlags =
    ::protozero::proto_utils::FieldMetadata<
      27,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_SystemUiVisibilityFlags kSystemUiVisibilityFlags{};
  void set_system_ui_visibility_flags(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_SystemUiVisibilityFlags::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_SubtreeSystemUiVisibilityFlags =
    ::protozero::proto_utils::FieldMetadata<
      28,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_SubtreeSystemUiVisibilityFlags kSubtreeSystemUiVisibilityFlags{};
  void set_subtree_system_ui_visibility_flags(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_SubtreeSystemUiVisibilityFlags::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Appearance =
    ::protozero::proto_utils::FieldMetadata<
      29,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_Appearance kAppearance{};
  void set_appearance(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Appearance::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Behavior =
    ::protozero::proto_utils::FieldMetadata<
      30,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_Behavior kBehavior{};
  void set_behavior(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Behavior::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_FitInsetsTypes =
    ::protozero::proto_utils::FieldMetadata<
      31,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_FitInsetsTypes kFitInsetsTypes{};
  void set_fit_insets_types(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_FitInsetsTypes::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_FitInsetsSides =
    ::protozero::proto_utils::FieldMetadata<
      32,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_FitInsetsSides kFitInsetsSides{};
  void set_fit_insets_sides(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_FitInsetsSides::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_FitIgnoreVisibility =
    ::protozero::proto_utils::FieldMetadata<
      33,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kBool,
      bool,
      WindowLayoutParamsProto>;

  static constexpr FieldMetadata_FitIgnoreVisibility kFitIgnoreVisibility{};
  void set_fit_ignore_visibility(bool value) {
    static constexpr uint32_t field_id = FieldMetadata_FitIgnoreVisibility::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kBool>
        ::Append(*this, field_id, value);
  }
};

} // Namespace.
} // Namespace.
} // Namespace.
#endif  // Include guard.
