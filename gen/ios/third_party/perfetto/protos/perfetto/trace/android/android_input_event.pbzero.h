// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_ANDROID_INPUT_EVENT_PROTO_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_ANDROID_INPUT_EVENT_PROTO_H_

#include <stddef.h>
#include <stdint.h>

#include "perfetto/protozero/field_writer.h"
#include "perfetto/protozero/message.h"
#include "perfetto/protozero/packed_repeated_fields.h"
#include "perfetto/protozero/proto_decoder.h"
#include "perfetto/protozero/proto_utils.h"

namespace perfetto {
namespace protos {
namespace pbzero {
class AndroidKeyEvent;
class AndroidMotionEvent;
class AndroidMotionEvent_Pointer;
class AndroidMotionEvent_Pointer_AxisValue;
class AndroidWindowInputDispatchEvent;
class AndroidWindowInputDispatchEvent_DispatchedPointer;
} // Namespace pbzero.
} // Namespace protos.
} // Namespace perfetto.

namespace perfetto {
namespace protos {
namespace pbzero {

class AndroidInputEvent_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/6, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  AndroidInputEvent_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit AndroidInputEvent_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit AndroidInputEvent_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_dispatcher_motion_event() const { return at<1>().valid(); }
  ::protozero::ConstBytes dispatcher_motion_event() const { return at<1>().as_bytes(); }
  bool has_dispatcher_motion_event_redacted() const { return at<2>().valid(); }
  ::protozero::ConstBytes dispatcher_motion_event_redacted() const { return at<2>().as_bytes(); }
  bool has_dispatcher_key_event() const { return at<3>().valid(); }
  ::protozero::ConstBytes dispatcher_key_event() const { return at<3>().as_bytes(); }
  bool has_dispatcher_key_event_redacted() const { return at<4>().valid(); }
  ::protozero::ConstBytes dispatcher_key_event_redacted() const { return at<4>().as_bytes(); }
  bool has_dispatcher_window_dispatch_event() const { return at<5>().valid(); }
  ::protozero::ConstBytes dispatcher_window_dispatch_event() const { return at<5>().as_bytes(); }
  bool has_dispatcher_window_dispatch_event_redacted() const { return at<6>().valid(); }
  ::protozero::ConstBytes dispatcher_window_dispatch_event_redacted() const { return at<6>().as_bytes(); }
};

class AndroidInputEvent : public ::protozero::Message {
 public:
  using Decoder = AndroidInputEvent_Decoder;
  enum : int32_t {
    kDispatcherMotionEventFieldNumber = 1,
    kDispatcherMotionEventRedactedFieldNumber = 2,
    kDispatcherKeyEventFieldNumber = 3,
    kDispatcherKeyEventRedactedFieldNumber = 4,
    kDispatcherWindowDispatchEventFieldNumber = 5,
    kDispatcherWindowDispatchEventRedactedFieldNumber = 6,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.AndroidInputEvent"; }


  using FieldMetadata_DispatcherMotionEvent =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      AndroidMotionEvent,
      AndroidInputEvent>;

  static constexpr FieldMetadata_DispatcherMotionEvent kDispatcherMotionEvent{};
  template <typename T = AndroidMotionEvent> T* set_dispatcher_motion_event() {
    return BeginNestedMessage<T>(1);
  }


  using FieldMetadata_DispatcherMotionEventRedacted =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      AndroidMotionEvent,
      AndroidInputEvent>;

  static constexpr FieldMetadata_DispatcherMotionEventRedacted kDispatcherMotionEventRedacted{};
  template <typename T = AndroidMotionEvent> T* set_dispatcher_motion_event_redacted() {
    return BeginNestedMessage<T>(2);
  }


  using FieldMetadata_DispatcherKeyEvent =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      AndroidKeyEvent,
      AndroidInputEvent>;

  static constexpr FieldMetadata_DispatcherKeyEvent kDispatcherKeyEvent{};
  template <typename T = AndroidKeyEvent> T* set_dispatcher_key_event() {
    return BeginNestedMessage<T>(3);
  }


  using FieldMetadata_DispatcherKeyEventRedacted =
    ::protozero::proto_utils::FieldMetadata<
      4,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      AndroidKeyEvent,
      AndroidInputEvent>;

  static constexpr FieldMetadata_DispatcherKeyEventRedacted kDispatcherKeyEventRedacted{};
  template <typename T = AndroidKeyEvent> T* set_dispatcher_key_event_redacted() {
    return BeginNestedMessage<T>(4);
  }


  using FieldMetadata_DispatcherWindowDispatchEvent =
    ::protozero::proto_utils::FieldMetadata<
      5,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      AndroidWindowInputDispatchEvent,
      AndroidInputEvent>;

  static constexpr FieldMetadata_DispatcherWindowDispatchEvent kDispatcherWindowDispatchEvent{};
  template <typename T = AndroidWindowInputDispatchEvent> T* set_dispatcher_window_dispatch_event() {
    return BeginNestedMessage<T>(5);
  }


  using FieldMetadata_DispatcherWindowDispatchEventRedacted =
    ::protozero::proto_utils::FieldMetadata<
      6,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      AndroidWindowInputDispatchEvent,
      AndroidInputEvent>;

  static constexpr FieldMetadata_DispatcherWindowDispatchEventRedacted kDispatcherWindowDispatchEventRedacted{};
  template <typename T = AndroidWindowInputDispatchEvent> T* set_dispatcher_window_dispatch_event_redacted() {
    return BeginNestedMessage<T>(6);
  }

};

class AndroidWindowInputDispatchEvent_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/5, /*HAS_NONPACKED_REPEATED_FIELDS=*/true> {
 public:
  AndroidWindowInputDispatchEvent_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit AndroidWindowInputDispatchEvent_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit AndroidWindowInputDispatchEvent_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_event_id() const { return at<1>().valid(); }
  uint32_t event_id() const { return at<1>().as_uint32(); }
  bool has_vsync_id() const { return at<2>().valid(); }
  int64_t vsync_id() const { return at<2>().as_int64(); }
  bool has_window_id() const { return at<3>().valid(); }
  int32_t window_id() const { return at<3>().as_int32(); }
  bool has_dispatched_pointer() const { return at<4>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstBytes> dispatched_pointer() const { return GetRepeated<::protozero::ConstBytes>(4); }
  bool has_resolved_flags() const { return at<5>().valid(); }
  uint32_t resolved_flags() const { return at<5>().as_uint32(); }
};

class AndroidWindowInputDispatchEvent : public ::protozero::Message {
 public:
  using Decoder = AndroidWindowInputDispatchEvent_Decoder;
  enum : int32_t {
    kEventIdFieldNumber = 1,
    kVsyncIdFieldNumber = 2,
    kWindowIdFieldNumber = 3,
    kDispatchedPointerFieldNumber = 4,
    kResolvedFlagsFieldNumber = 5,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.AndroidWindowInputDispatchEvent"; }

  using DispatchedPointer = ::perfetto::protos::pbzero::AndroidWindowInputDispatchEvent_DispatchedPointer;

  using FieldMetadata_EventId =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFixed32,
      uint32_t,
      AndroidWindowInputDispatchEvent>;

  static constexpr FieldMetadata_EventId kEventId{};
  void set_event_id(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_EventId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFixed32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_VsyncId =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt64,
      int64_t,
      AndroidWindowInputDispatchEvent>;

  static constexpr FieldMetadata_VsyncId kVsyncId{};
  void set_vsync_id(int64_t value) {
    static constexpr uint32_t field_id = FieldMetadata_VsyncId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt64>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_WindowId =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidWindowInputDispatchEvent>;

  static constexpr FieldMetadata_WindowId kWindowId{};
  void set_window_id(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_WindowId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_DispatchedPointer =
    ::protozero::proto_utils::FieldMetadata<
      4,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      AndroidWindowInputDispatchEvent_DispatchedPointer,
      AndroidWindowInputDispatchEvent>;

  static constexpr FieldMetadata_DispatchedPointer kDispatchedPointer{};
  template <typename T = AndroidWindowInputDispatchEvent_DispatchedPointer> T* add_dispatched_pointer() {
    return BeginNestedMessage<T>(4);
  }


  using FieldMetadata_ResolvedFlags =
    ::protozero::proto_utils::FieldMetadata<
      5,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidWindowInputDispatchEvent>;

  static constexpr FieldMetadata_ResolvedFlags kResolvedFlags{};
  void set_resolved_flags(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ResolvedFlags::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }
};

class AndroidWindowInputDispatchEvent_DispatchedPointer_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/4, /*HAS_NONPACKED_REPEATED_FIELDS=*/true> {
 public:
  AndroidWindowInputDispatchEvent_DispatchedPointer_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit AndroidWindowInputDispatchEvent_DispatchedPointer_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit AndroidWindowInputDispatchEvent_DispatchedPointer_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_pointer_id() const { return at<1>().valid(); }
  int32_t pointer_id() const { return at<1>().as_int32(); }
  bool has_x_in_display() const { return at<2>().valid(); }
  float x_in_display() const { return at<2>().as_float(); }
  bool has_y_in_display() const { return at<3>().valid(); }
  float y_in_display() const { return at<3>().as_float(); }
  bool has_axis_value_in_window() const { return at<4>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstBytes> axis_value_in_window() const { return GetRepeated<::protozero::ConstBytes>(4); }
};

class AndroidWindowInputDispatchEvent_DispatchedPointer : public ::protozero::Message {
 public:
  using Decoder = AndroidWindowInputDispatchEvent_DispatchedPointer_Decoder;
  enum : int32_t {
    kPointerIdFieldNumber = 1,
    kXInDisplayFieldNumber = 2,
    kYInDisplayFieldNumber = 3,
    kAxisValueInWindowFieldNumber = 4,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.AndroidWindowInputDispatchEvent.DispatchedPointer"; }


  using FieldMetadata_PointerId =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidWindowInputDispatchEvent_DispatchedPointer>;

  static constexpr FieldMetadata_PointerId kPointerId{};
  void set_pointer_id(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_PointerId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_XInDisplay =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      AndroidWindowInputDispatchEvent_DispatchedPointer>;

  static constexpr FieldMetadata_XInDisplay kXInDisplay{};
  void set_x_in_display(float value) {
    static constexpr uint32_t field_id = FieldMetadata_XInDisplay::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_YInDisplay =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      AndroidWindowInputDispatchEvent_DispatchedPointer>;

  static constexpr FieldMetadata_YInDisplay kYInDisplay{};
  void set_y_in_display(float value) {
    static constexpr uint32_t field_id = FieldMetadata_YInDisplay::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_AxisValueInWindow =
    ::protozero::proto_utils::FieldMetadata<
      4,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      AndroidMotionEvent_Pointer_AxisValue,
      AndroidWindowInputDispatchEvent_DispatchedPointer>;

  static constexpr FieldMetadata_AxisValueInWindow kAxisValueInWindow{};
  template <typename T = AndroidMotionEvent_Pointer_AxisValue> T* add_axis_value_in_window() {
    return BeginNestedMessage<T>(4);
  }

};

class AndroidKeyEvent_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/13, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  AndroidKeyEvent_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit AndroidKeyEvent_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit AndroidKeyEvent_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_event_id() const { return at<1>().valid(); }
  uint32_t event_id() const { return at<1>().as_uint32(); }
  bool has_event_time_nanos() const { return at<2>().valid(); }
  int64_t event_time_nanos() const { return at<2>().as_int64(); }
  bool has_down_time_nanos() const { return at<3>().valid(); }
  int64_t down_time_nanos() const { return at<3>().as_int64(); }
  bool has_source() const { return at<4>().valid(); }
  uint32_t source() const { return at<4>().as_uint32(); }
  bool has_action() const { return at<5>().valid(); }
  int32_t action() const { return at<5>().as_int32(); }
  bool has_device_id() const { return at<6>().valid(); }
  int32_t device_id() const { return at<6>().as_int32(); }
  bool has_display_id() const { return at<7>().valid(); }
  int32_t display_id() const { return at<7>().as_sint32(); }
  bool has_key_code() const { return at<8>().valid(); }
  int32_t key_code() const { return at<8>().as_int32(); }
  bool has_scan_code() const { return at<9>().valid(); }
  uint32_t scan_code() const { return at<9>().as_uint32(); }
  bool has_meta_state() const { return at<10>().valid(); }
  uint32_t meta_state() const { return at<10>().as_uint32(); }
  bool has_repeat_count() const { return at<11>().valid(); }
  int32_t repeat_count() const { return at<11>().as_int32(); }
  bool has_flags() const { return at<12>().valid(); }
  uint32_t flags() const { return at<12>().as_uint32(); }
  bool has_policy_flags() const { return at<13>().valid(); }
  uint32_t policy_flags() const { return at<13>().as_uint32(); }
};

class AndroidKeyEvent : public ::protozero::Message {
 public:
  using Decoder = AndroidKeyEvent_Decoder;
  enum : int32_t {
    kEventIdFieldNumber = 1,
    kEventTimeNanosFieldNumber = 2,
    kDownTimeNanosFieldNumber = 3,
    kSourceFieldNumber = 4,
    kActionFieldNumber = 5,
    kDeviceIdFieldNumber = 6,
    kDisplayIdFieldNumber = 7,
    kKeyCodeFieldNumber = 8,
    kScanCodeFieldNumber = 9,
    kMetaStateFieldNumber = 10,
    kRepeatCountFieldNumber = 11,
    kFlagsFieldNumber = 12,
    kPolicyFlagsFieldNumber = 13,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.AndroidKeyEvent"; }


  using FieldMetadata_EventId =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFixed32,
      uint32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_EventId kEventId{};
  void set_event_id(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_EventId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFixed32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_EventTimeNanos =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt64,
      int64_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_EventTimeNanos kEventTimeNanos{};
  void set_event_time_nanos(int64_t value) {
    static constexpr uint32_t field_id = FieldMetadata_EventTimeNanos::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt64>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_DownTimeNanos =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt64,
      int64_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_DownTimeNanos kDownTimeNanos{};
  void set_down_time_nanos(int64_t value) {
    static constexpr uint32_t field_id = FieldMetadata_DownTimeNanos::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt64>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Source =
    ::protozero::proto_utils::FieldMetadata<
      4,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_Source kSource{};
  void set_source(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Source::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Action =
    ::protozero::proto_utils::FieldMetadata<
      5,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_Action kAction{};
  void set_action(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Action::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_DeviceId =
    ::protozero::proto_utils::FieldMetadata<
      6,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_DeviceId kDeviceId{};
  void set_device_id(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_DeviceId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_DisplayId =
    ::protozero::proto_utils::FieldMetadata<
      7,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kSint32,
      int32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_DisplayId kDisplayId{};
  void set_display_id(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_DisplayId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kSint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_KeyCode =
    ::protozero::proto_utils::FieldMetadata<
      8,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_KeyCode kKeyCode{};
  void set_key_code(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_KeyCode::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ScanCode =
    ::protozero::proto_utils::FieldMetadata<
      9,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_ScanCode kScanCode{};
  void set_scan_code(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ScanCode::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_MetaState =
    ::protozero::proto_utils::FieldMetadata<
      10,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_MetaState kMetaState{};
  void set_meta_state(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_MetaState::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_RepeatCount =
    ::protozero::proto_utils::FieldMetadata<
      11,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_RepeatCount kRepeatCount{};
  void set_repeat_count(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_RepeatCount::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Flags =
    ::protozero::proto_utils::FieldMetadata<
      12,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_Flags kFlags{};
  void set_flags(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Flags::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_PolicyFlags =
    ::protozero::proto_utils::FieldMetadata<
      13,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidKeyEvent>;

  static constexpr FieldMetadata_PolicyFlags kPolicyFlags{};
  void set_policy_flags(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_PolicyFlags::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }
};

class AndroidMotionEvent_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/25, /*HAS_NONPACKED_REPEATED_FIELDS=*/true> {
 public:
  AndroidMotionEvent_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit AndroidMotionEvent_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit AndroidMotionEvent_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_event_id() const { return at<1>().valid(); }
  uint32_t event_id() const { return at<1>().as_uint32(); }
  bool has_event_time_nanos() const { return at<2>().valid(); }
  int64_t event_time_nanos() const { return at<2>().as_int64(); }
  bool has_source() const { return at<3>().valid(); }
  uint32_t source() const { return at<3>().as_uint32(); }
  bool has_action() const { return at<4>().valid(); }
  int32_t action() const { return at<4>().as_int32(); }
  bool has_device_id() const { return at<5>().valid(); }
  int32_t device_id() const { return at<5>().as_int32(); }
  bool has_display_id() const { return at<6>().valid(); }
  int32_t display_id() const { return at<6>().as_sint32(); }
  bool has_classification() const { return at<7>().valid(); }
  int32_t classification() const { return at<7>().as_int32(); }
  bool has_flags() const { return at<8>().valid(); }
  uint32_t flags() const { return at<8>().as_uint32(); }
  bool has_pointer() const { return at<9>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstBytes> pointer() const { return GetRepeated<::protozero::ConstBytes>(9); }
  bool has_original_event_id() const { return at<16>().valid(); }
  ::protozero::PackedRepeatedFieldIterator<::protozero::proto_utils::ProtoWireType::kFixed32, uint32_t> original_event_id(bool* parse_error_ptr) const { return GetPackedRepeated<::protozero::proto_utils::ProtoWireType::kFixed32, uint32_t>(16, parse_error_ptr); }
  bool has_down_time_nanos() const { return at<17>().valid(); }
  int64_t down_time_nanos() const { return at<17>().as_int64(); }
  bool has_cursor_position_x() const { return at<18>().valid(); }
  float cursor_position_x() const { return at<18>().as_float(); }
  bool has_cursor_position_y() const { return at<19>().valid(); }
  float cursor_position_y() const { return at<19>().as_float(); }
  bool has_action_button() const { return at<20>().valid(); }
  int32_t action_button() const { return at<20>().as_int32(); }
  bool has_button_state() const { return at<21>().valid(); }
  uint32_t button_state() const { return at<21>().as_uint32(); }
  bool has_meta_state() const { return at<22>().valid(); }
  uint32_t meta_state() const { return at<22>().as_uint32(); }
  bool has_policy_flags() const { return at<23>().valid(); }
  uint32_t policy_flags() const { return at<23>().as_uint32(); }
  bool has_precision_x() const { return at<24>().valid(); }
  float precision_x() const { return at<24>().as_float(); }
  bool has_precision_y() const { return at<25>().valid(); }
  float precision_y() const { return at<25>().as_float(); }
};

class AndroidMotionEvent : public ::protozero::Message {
 public:
  using Decoder = AndroidMotionEvent_Decoder;
  enum : int32_t {
    kEventIdFieldNumber = 1,
    kEventTimeNanosFieldNumber = 2,
    kSourceFieldNumber = 3,
    kActionFieldNumber = 4,
    kDeviceIdFieldNumber = 5,
    kDisplayIdFieldNumber = 6,
    kClassificationFieldNumber = 7,
    kFlagsFieldNumber = 8,
    kPointerFieldNumber = 9,
    kOriginalEventIdFieldNumber = 16,
    kDownTimeNanosFieldNumber = 17,
    kCursorPositionXFieldNumber = 18,
    kCursorPositionYFieldNumber = 19,
    kActionButtonFieldNumber = 20,
    kButtonStateFieldNumber = 21,
    kMetaStateFieldNumber = 22,
    kPolicyFlagsFieldNumber = 23,
    kPrecisionXFieldNumber = 24,
    kPrecisionYFieldNumber = 25,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.AndroidMotionEvent"; }

  using Pointer = ::perfetto::protos::pbzero::AndroidMotionEvent_Pointer;

  using FieldMetadata_EventId =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFixed32,
      uint32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_EventId kEventId{};
  void set_event_id(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_EventId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFixed32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_EventTimeNanos =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt64,
      int64_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_EventTimeNanos kEventTimeNanos{};
  void set_event_time_nanos(int64_t value) {
    static constexpr uint32_t field_id = FieldMetadata_EventTimeNanos::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt64>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Source =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_Source kSource{};
  void set_source(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Source::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Action =
    ::protozero::proto_utils::FieldMetadata<
      4,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_Action kAction{};
  void set_action(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Action::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_DeviceId =
    ::protozero::proto_utils::FieldMetadata<
      5,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_DeviceId kDeviceId{};
  void set_device_id(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_DeviceId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_DisplayId =
    ::protozero::proto_utils::FieldMetadata<
      6,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kSint32,
      int32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_DisplayId kDisplayId{};
  void set_display_id(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_DisplayId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kSint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Classification =
    ::protozero::proto_utils::FieldMetadata<
      7,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_Classification kClassification{};
  void set_classification(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Classification::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Flags =
    ::protozero::proto_utils::FieldMetadata<
      8,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_Flags kFlags{};
  void set_flags(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Flags::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Pointer =
    ::protozero::proto_utils::FieldMetadata<
      9,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      AndroidMotionEvent_Pointer,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_Pointer kPointer{};
  template <typename T = AndroidMotionEvent_Pointer> T* add_pointer() {
    return BeginNestedMessage<T>(9);
  }


  using FieldMetadata_OriginalEventId =
    ::protozero::proto_utils::FieldMetadata<
      16,
      ::protozero::proto_utils::RepetitionType::kRepeatedPacked,
      ::protozero::proto_utils::ProtoSchemaType::kFixed32,
      uint32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_OriginalEventId kOriginalEventId{};
  void set_original_event_id(const ::protozero::PackedFixedSizeInt<uint32_t>& packed_buffer) {
    AppendBytes(FieldMetadata_OriginalEventId::kFieldId, packed_buffer.data(),
                packed_buffer.size());
  }

  using FieldMetadata_DownTimeNanos =
    ::protozero::proto_utils::FieldMetadata<
      17,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt64,
      int64_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_DownTimeNanos kDownTimeNanos{};
  void set_down_time_nanos(int64_t value) {
    static constexpr uint32_t field_id = FieldMetadata_DownTimeNanos::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt64>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_CursorPositionX =
    ::protozero::proto_utils::FieldMetadata<
      18,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_CursorPositionX kCursorPositionX{};
  void set_cursor_position_x(float value) {
    static constexpr uint32_t field_id = FieldMetadata_CursorPositionX::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_CursorPositionY =
    ::protozero::proto_utils::FieldMetadata<
      19,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_CursorPositionY kCursorPositionY{};
  void set_cursor_position_y(float value) {
    static constexpr uint32_t field_id = FieldMetadata_CursorPositionY::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ActionButton =
    ::protozero::proto_utils::FieldMetadata<
      20,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_ActionButton kActionButton{};
  void set_action_button(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ActionButton::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ButtonState =
    ::protozero::proto_utils::FieldMetadata<
      21,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_ButtonState kButtonState{};
  void set_button_state(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ButtonState::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_MetaState =
    ::protozero::proto_utils::FieldMetadata<
      22,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_MetaState kMetaState{};
  void set_meta_state(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_MetaState::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_PolicyFlags =
    ::protozero::proto_utils::FieldMetadata<
      23,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_PolicyFlags kPolicyFlags{};
  void set_policy_flags(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_PolicyFlags::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_PrecisionX =
    ::protozero::proto_utils::FieldMetadata<
      24,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_PrecisionX kPrecisionX{};
  void set_precision_x(float value) {
    static constexpr uint32_t field_id = FieldMetadata_PrecisionX::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_PrecisionY =
    ::protozero::proto_utils::FieldMetadata<
      25,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      AndroidMotionEvent>;

  static constexpr FieldMetadata_PrecisionY kPrecisionY{};
  void set_precision_y(float value) {
    static constexpr uint32_t field_id = FieldMetadata_PrecisionY::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }
};

class AndroidMotionEvent_Pointer_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/3, /*HAS_NONPACKED_REPEATED_FIELDS=*/true> {
 public:
  AndroidMotionEvent_Pointer_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit AndroidMotionEvent_Pointer_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit AndroidMotionEvent_Pointer_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_axis_value() const { return at<1>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstBytes> axis_value() const { return GetRepeated<::protozero::ConstBytes>(1); }
  bool has_pointer_id() const { return at<2>().valid(); }
  int32_t pointer_id() const { return at<2>().as_int32(); }
  bool has_tool_type() const { return at<3>().valid(); }
  int32_t tool_type() const { return at<3>().as_int32(); }
};

class AndroidMotionEvent_Pointer : public ::protozero::Message {
 public:
  using Decoder = AndroidMotionEvent_Pointer_Decoder;
  enum : int32_t {
    kAxisValueFieldNumber = 1,
    kPointerIdFieldNumber = 2,
    kToolTypeFieldNumber = 3,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.AndroidMotionEvent.Pointer"; }

  using AxisValue = ::perfetto::protos::pbzero::AndroidMotionEvent_Pointer_AxisValue;

  using FieldMetadata_AxisValue =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      AndroidMotionEvent_Pointer_AxisValue,
      AndroidMotionEvent_Pointer>;

  static constexpr FieldMetadata_AxisValue kAxisValue{};
  template <typename T = AndroidMotionEvent_Pointer_AxisValue> T* add_axis_value() {
    return BeginNestedMessage<T>(1);
  }


  using FieldMetadata_PointerId =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidMotionEvent_Pointer>;

  static constexpr FieldMetadata_PointerId kPointerId{};
  void set_pointer_id(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_PointerId::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ToolType =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidMotionEvent_Pointer>;

  static constexpr FieldMetadata_ToolType kToolType{};
  void set_tool_type(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ToolType::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }
};

class AndroidMotionEvent_Pointer_AxisValue_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/2, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  AndroidMotionEvent_Pointer_AxisValue_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit AndroidMotionEvent_Pointer_AxisValue_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit AndroidMotionEvent_Pointer_AxisValue_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_axis() const { return at<1>().valid(); }
  int32_t axis() const { return at<1>().as_int32(); }
  bool has_value() const { return at<2>().valid(); }
  float value() const { return at<2>().as_float(); }
};

class AndroidMotionEvent_Pointer_AxisValue : public ::protozero::Message {
 public:
  using Decoder = AndroidMotionEvent_Pointer_AxisValue_Decoder;
  enum : int32_t {
    kAxisFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.AndroidMotionEvent.Pointer.AxisValue"; }


  using FieldMetadata_Axis =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      AndroidMotionEvent_Pointer_AxisValue>;

  static constexpr FieldMetadata_Axis kAxis{};
  void set_axis(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Axis::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Value =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      AndroidMotionEvent_Pointer_AxisValue>;

  static constexpr FieldMetadata_Value kValue{};
  void set_value(float value) {
    static constexpr uint32_t field_id = FieldMetadata_Value::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }
};

} // Namespace.
} // Namespace.
} // Namespace.
#endif  // Include guard.
